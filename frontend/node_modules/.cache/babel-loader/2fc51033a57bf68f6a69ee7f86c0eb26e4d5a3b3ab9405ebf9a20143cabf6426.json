{"ast":null,"code":"var _jsxFileName = \"D:\\\\hidc project\\\\hidc project\\\\frontend\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport { SignedIn, SignedOut, SignInButton, SignUpButton } from \"@clerk/clerk-react\";\nimport { Box, Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      gap: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Welcome to Health Insurance Validator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignedOut, {\n      children: [/*#__PURE__*/_jsxDEV(SignInButton, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignUpButton, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignedIn, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"You are signed in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n//-------------------------------------------------\n\n// import React, { useState } from \"react\";\n// import {\n//   Box, Container, Grid, Typography, AppBar, Toolbar,\n//   IconButton, Button\n// } from \"@mui/material\";\n// import CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\n// import SaveIcon from \"@mui/icons-material/Save\";\n// import DownloadIcon from \"@mui/icons-material/Download\";\n// import FileUpload from \"./components/FileUpload\";\n// import PreviewPanel from \"./components/PreviewPanel\";\n// import ResultsPanel from \"./components/ResultsPanel\";\n// import SummaryPanel from \"./components/SummaryPanel\";\n// import axios from \"axios\";\n// import { useAuth } from \"@clerk/clerk-react\";\n\n// export default function App() {\n//   const [uploading, setUploading] = useState(false);\n//   const [documentFile, setDocumentFile] = useState(null);\n//   const [results, setResults] = useState(null);\n\n//   const { getToken } = useAuth(); // Clerk hook\n\n//   // Handle file upload with backend JWT auth\n//   async function handleFile(file) {\n//     setUploading(true);\n//     setDocumentFile(file);\n\n//     try {\n//       const token = await getToken(); // get JWT from Clerk\n//       const formData = new FormData();\n//       formData.append(\"file\", file);\n\n//       const res = await axios.post(`${import.meta.env.VITE_API_BASE_URL}/api/ocr`, formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//           Authorization: `Bearer ${token}` // send JWT to backend\n//         },\n//       });\n\n//       console.log(\"✅ Backend Response:\", res.data);\n//       setResults(res.data);\n//     } catch (err) {\n//       console.error(\"❌ Error connecting to backend:\", err);\n//       setResults({ error: \"Backend connection failed\" });\n//     } finally {\n//       setUploading(false);\n//     }\n//   }\n\n//   // Update field manually\n//   function handleUpdateField(fieldName, newValue) {\n//     setResults((prev) => {\n//       if (!prev) return prev;\n//       return {\n//         ...prev,\n//         fields: prev.fields.map((f) =>\n//           f.field === fieldName\n//             ? {\n//                 ...f,\n//                 value: newValue,\n//                 resolvedManually: true,\n//                 status: f.status === \"error\" ? \"warn\" : f.status,\n//               }\n//             : f\n//         ),\n//       };\n//     });\n//   }\n\n//   // Export results to JSON\n//   function handleExport() {\n//     const blob = new Blob([JSON.stringify(results, null, 2)], {\n//       type: \"application/json\",\n//     });\n//     const href = URL.createObjectURL(blob);\n//     const a = document.createElement(\"a\");\n//     a.href = href;\n//     a.download = \"validated_output.json\";\n//     a.click();\n//     URL.revokeObjectURL(href);\n//   }\n\n//   return (\n//     <Box sx={{ minHeight: \"100vh\", bgcolor: \"background.default\" }}>\n//       <AppBar position=\"static\">\n//         <Toolbar>\n//           <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n//             Health Insurance Document Validator\n//           </Typography>\n//           <IconButton color=\"inherit\">\n//             <SaveIcon />\n//           </IconButton>\n//           <Button color=\"inherit\" startIcon={<DownloadIcon />} onClick={handleExport}>\n//             Export\n//           </Button>\n//         </Toolbar>\n//       </AppBar>\n\n//       <Container maxWidth=\"xl\" sx={{ py: 3 }}>\n//         <Grid container spacing={2}>\n//           <Grid item xs={12} md={3}>\n//             <FileUpload onUpload={handleFile} uploading={uploading} />\n//             <Box mt={2}>\n//               <PreviewPanel file={documentFile} />\n//             </Box>\n//             <Box mt={2}>\n//               <Typography variant=\"caption\" color=\"text.secondary\">\n//                 Included: CMS-1500 template & validation scenarios in /assets\n//               </Typography>\n//             </Box>\n//           </Grid>\n//           <Grid item xs={12} md={6}>\n//             <ResultsPanel results={results} onUpdateField={handleUpdateField} />\n//           </Grid>\n//           <Grid item xs={12} md={3}>\n//             <SummaryPanel results={results} />\n//             <Box mt={2}>\n//               <Button variant=\"contained\" startIcon={<CloudUploadIcon />} fullWidth>\n//                 Apply Suggestions\n//               </Button>\n//             </Box>\n//           </Grid>\n//         </Grid>\n//       </Container>\n//     </Box>\n//   );\n// }\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","SignedIn","SignedOut","SignInButton","SignUpButton","Box","Button","Typography","jsxDEV","_jsxDEV","App","sx","display","flexDirection","alignItems","justifyContent","height","gap","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["D:/hidc project/hidc project/frontend/src/App.jsx"],"sourcesContent":["import React from \"react\";\nimport { SignedIn, SignedOut, SignInButton, SignUpButton } from \"@clerk/clerk-react\";\nimport { Box, Button, Typography } from \"@mui/material\";\n\nexport default function App() {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        gap: 2,\n      }}\n    >\n      <Typography variant=\"h4\">Welcome to Health Insurance Validator</Typography>\n\n      <SignedOut>\n        <SignInButton>\n          <Button variant=\"contained\" color=\"primary\">\n            Sign In\n          </Button>\n        </SignInButton>\n\n        <SignUpButton>\n          <Button variant=\"outlined\" color=\"secondary\">\n            Sign Up\n          </Button>\n        </SignUpButton>\n      </SignedOut>\n\n      <SignedIn>\n        <Typography variant=\"h6\">You are signed in!</Typography>\n      </SignedIn>\n    </Box>\n  );\n}\n\n\n\n//-------------------------------------------------\n\n\n// import React, { useState } from \"react\";\n// import {\n//   Box, Container, Grid, Typography, AppBar, Toolbar,\n//   IconButton, Button\n// } from \"@mui/material\";\n// import CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\n// import SaveIcon from \"@mui/icons-material/Save\";\n// import DownloadIcon from \"@mui/icons-material/Download\";\n// import FileUpload from \"./components/FileUpload\";\n// import PreviewPanel from \"./components/PreviewPanel\";\n// import ResultsPanel from \"./components/ResultsPanel\";\n// import SummaryPanel from \"./components/SummaryPanel\";\n// import axios from \"axios\";\n// import { useAuth } from \"@clerk/clerk-react\";\n\n// export default function App() {\n//   const [uploading, setUploading] = useState(false);\n//   const [documentFile, setDocumentFile] = useState(null);\n//   const [results, setResults] = useState(null);\n\n//   const { getToken } = useAuth(); // Clerk hook\n\n//   // Handle file upload with backend JWT auth\n//   async function handleFile(file) {\n//     setUploading(true);\n//     setDocumentFile(file);\n\n//     try {\n//       const token = await getToken(); // get JWT from Clerk\n//       const formData = new FormData();\n//       formData.append(\"file\", file);\n\n//       const res = await axios.post(`${import.meta.env.VITE_API_BASE_URL}/api/ocr`, formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//           Authorization: `Bearer ${token}` // send JWT to backend\n//         },\n//       });\n\n//       console.log(\"✅ Backend Response:\", res.data);\n//       setResults(res.data);\n//     } catch (err) {\n//       console.error(\"❌ Error connecting to backend:\", err);\n//       setResults({ error: \"Backend connection failed\" });\n//     } finally {\n//       setUploading(false);\n//     }\n//   }\n\n//   // Update field manually\n//   function handleUpdateField(fieldName, newValue) {\n//     setResults((prev) => {\n//       if (!prev) return prev;\n//       return {\n//         ...prev,\n//         fields: prev.fields.map((f) =>\n//           f.field === fieldName\n//             ? {\n//                 ...f,\n//                 value: newValue,\n//                 resolvedManually: true,\n//                 status: f.status === \"error\" ? \"warn\" : f.status,\n//               }\n//             : f\n//         ),\n//       };\n//     });\n//   }\n\n//   // Export results to JSON\n//   function handleExport() {\n//     const blob = new Blob([JSON.stringify(results, null, 2)], {\n//       type: \"application/json\",\n//     });\n//     const href = URL.createObjectURL(blob);\n//     const a = document.createElement(\"a\");\n//     a.href = href;\n//     a.download = \"validated_output.json\";\n//     a.click();\n//     URL.revokeObjectURL(href);\n//   }\n\n//   return (\n//     <Box sx={{ minHeight: \"100vh\", bgcolor: \"background.default\" }}>\n//       <AppBar position=\"static\">\n//         <Toolbar>\n//           <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n//             Health Insurance Document Validator\n//           </Typography>\n//           <IconButton color=\"inherit\">\n//             <SaveIcon />\n//           </IconButton>\n//           <Button color=\"inherit\" startIcon={<DownloadIcon />} onClick={handleExport}>\n//             Export\n//           </Button>\n//         </Toolbar>\n//       </AppBar>\n\n//       <Container maxWidth=\"xl\" sx={{ py: 3 }}>\n//         <Grid container spacing={2}>\n//           <Grid item xs={12} md={3}>\n//             <FileUpload onUpload={handleFile} uploading={uploading} />\n//             <Box mt={2}>\n//               <PreviewPanel file={documentFile} />\n//             </Box>\n//             <Box mt={2}>\n//               <Typography variant=\"caption\" color=\"text.secondary\">\n//                 Included: CMS-1500 template & validation scenarios in /assets\n//               </Typography>\n//             </Box>\n//           </Grid>\n//           <Grid item xs={12} md={6}>\n//             <ResultsPanel results={results} onUpdateField={handleUpdateField} />\n//           </Grid>\n//           <Grid item xs={12} md={3}>\n//             <SummaryPanel results={results} />\n//             <Box mt={2}>\n//               <Button variant=\"contained\" startIcon={<CloudUploadIcon />} fullWidth>\n//                 Apply Suggestions\n//               </Button>\n//             </Box>\n//           </Grid>\n//         </Grid>\n//       </Container>\n//     </Box>\n//   );\n// }\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,YAAY,EAAEC,YAAY,QAAQ,oBAAoB;AACpF,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,oBACED,OAAA,CAACJ,GAAG;IACFM,EAAE,EAAE;MACFC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,MAAM,EAAE,OAAO;MACfC,GAAG,EAAE;IACP,CAAE;IAAAC,QAAA,gBAEFT,OAAA,CAACF,UAAU;MAACY,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAqC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAE3Ed,OAAA,CAACP,SAAS;MAAAgB,QAAA,gBACRT,OAAA,CAACN,YAAY;QAAAe,QAAA,eACXT,OAAA,CAACH,MAAM;UAACa,OAAO,EAAC,WAAW;UAACK,KAAK,EAAC,SAAS;UAAAN,QAAA,EAAC;QAE5C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAEfd,OAAA,CAACL,YAAY;QAAAc,QAAA,eACXT,OAAA,CAACH,MAAM;UAACa,OAAO,EAAC,UAAU;UAACK,KAAK,EAAC,WAAW;UAAAN,QAAA,EAAC;QAE7C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEZd,OAAA,CAACR,QAAQ;MAAAiB,QAAA,eACPT,OAAA,CAACF,UAAU;QAACY,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;;AAIA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAE,EAAA,GAtKwBf,GAAG;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}