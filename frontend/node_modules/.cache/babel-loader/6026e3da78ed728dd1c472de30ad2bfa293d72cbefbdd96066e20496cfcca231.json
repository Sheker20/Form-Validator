{"ast":null,"code":"var _jsxFileName = \"D:\\\\hidc project\\\\hidc project\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Paper, Box, Typography, Button } from \"@mui/material\";\nimport UploadFileIcon from \"@mui/icons-material/UploadFile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUpload({\n  onUpload,\n  uploading\n}) {\n  _s();\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length) onUpload(acceptedFiles[0]);\n  }, [onUpload]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: {\n      \"application/pdf\": [],\n      \"image/*\": []\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      ...getRootProps(),\n      sx: {\n        border: \"2px dashed\",\n        borderColor: \"divider\",\n        borderRadius: 2,\n        p: 2,\n        textAlign: \"center\",\n        cursor: \"pointer\",\n        bgcolor: isDragActive ? \"grey.50\" : \"transparent\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadFileIcon, {\n        sx: {\n          fontSize: 36,\n          color: \"primary.main\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Drop PDF or Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"or click to select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disabled: uploading,\n          children: uploading ? \"Uploading...\" : \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useCallback","useDropzone","Paper","Box","Typography","Button","UploadFileIcon","jsxDEV","_jsxDEV","FileUpload","onUpload","uploading","_s","onDrop","acceptedFiles","length","getRootProps","getInputProps","isDragActive","multiple","accept","elevation","sx","p","children","border","borderColor","borderRadius","textAlign","cursor","bgcolor","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","variant","mt","disabled","_c","$RefreshReg$"],"sources":["D:/hidc project/hidc project/src/components/FileUpload.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Paper, Box, Typography, Button } from \"@mui/material\";\nimport UploadFileIcon from \"@mui/icons-material/UploadFile\";\n\nexport default function FileUpload({ onUpload, uploading }) {\n  const onDrop = useCallback((acceptedFiles) => {\n    if (acceptedFiles.length) onUpload(acceptedFiles[0]);\n  }, [onUpload]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop, multiple: false, accept: { \"application/pdf\": [], \"image/*\": [] }\n  });\n\n  return (\n    <Paper elevation={3} sx={{ p: 2 }}>\n      <Box {...getRootProps()} sx={{\n        border: \"2px dashed\", borderColor: \"divider\", borderRadius: 2,\n        p: 2, textAlign: \"center\", cursor: \"pointer\",\n        bgcolor: isDragActive ? \"grey.50\" : \"transparent\"\n      }}>\n        <input {...getInputProps()} />\n        <UploadFileIcon sx={{ fontSize: 36, color: \"primary.main\" }} />\n        <Typography variant=\"h6\">Drop PDF or Image</Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          or click to select\n        </Typography>\n        <Box mt={2}>\n          <Button variant=\"contained\" disabled={uploading}>\n            {uploading ? \"Uploading...\" : \"Upload File\"}\n          </Button>\n        </Box>\n      </Box>\n    </Paper>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAC9D,OAAOC,cAAc,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,eAAe,SAASC,UAAUA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAMC,MAAM,GAAGb,WAAW,CAAEc,aAAa,IAAK;IAC5C,IAAIA,aAAa,CAACC,MAAM,EAAEL,QAAQ,CAACI,aAAa,CAAC,CAAC,CAAC,CAAC;EACtD,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAM;IAAEM,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGjB,WAAW,CAAC;IAChEY,MAAM;IAAEM,QAAQ,EAAE,KAAK;IAAEC,MAAM,EAAE;MAAE,iBAAiB,EAAE,EAAE;MAAE,SAAS,EAAE;IAAG;EAC1E,CAAC,CAAC;EAEF,oBACEZ,OAAA,CAACN,KAAK;IAACmB,SAAS,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,eAChChB,OAAA,CAACL,GAAG;MAAA,GAAKa,YAAY,CAAC,CAAC;MAAEM,EAAE,EAAE;QAC3BG,MAAM,EAAE,YAAY;QAAEC,WAAW,EAAE,SAAS;QAAEC,YAAY,EAAE,CAAC;QAC7DJ,CAAC,EAAE,CAAC;QAAEK,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE,SAAS;QAC5CC,OAAO,EAAEZ,YAAY,GAAG,SAAS,GAAG;MACtC,CAAE;MAAAM,QAAA,gBACAhB,OAAA;QAAA,GAAWS,aAAa,CAAC;MAAC;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9B1B,OAAA,CAACF,cAAc;QAACgB,EAAE,EAAE;UAAEa,QAAQ,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAe;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/D1B,OAAA,CAACJ,UAAU;QAACiC,OAAO,EAAC,IAAI;QAAAb,QAAA,EAAC;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACvD1B,OAAA,CAACJ,UAAU;QAACiC,OAAO,EAAC,OAAO;QAACD,KAAK,EAAC,gBAAgB;QAAAZ,QAAA,EAAC;MAEnD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb1B,OAAA,CAACL,GAAG;QAACmC,EAAE,EAAE,CAAE;QAAAd,QAAA,eACThB,OAAA,CAACH,MAAM;UAACgC,OAAO,EAAC,WAAW;UAACE,QAAQ,EAAE5B,SAAU;UAAAa,QAAA,EAC7Cb,SAAS,GAAG,cAAc,GAAG;QAAa;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ;AAACtB,EAAA,CA9BuBH,UAAU;EAAA,QAKsBR,WAAW;AAAA;AAAAuC,EAAA,GAL3C/B,UAAU;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}