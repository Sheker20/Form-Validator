{"ast":null,"code":"import { AuthenticateWithRedirectCallback, ClerkDegraded, ClerkFailed, ClerkLoaded, ClerkLoading, Protect, RedirectToCreateOrganization, RedirectToOrganizationProfile, RedirectToSignIn, RedirectToSignUp, RedirectToTasks, RedirectToUserProfile, SignedIn, SignedOut } from \"./chunk-GU2XVMYI.mjs\";\nimport { APIKeys, CreateOrganization, GoogleOneTap, OrganizationList, OrganizationProfile, OrganizationSwitcher, PricingTable, SignIn, SignUp, TaskChooseOrganization, UserButton, UserProfile, Waitlist, assertSingleChild, isConstructor, normalizeWithDefaultValue, safeExecute, withMaxAllowedInstancesGuard } from \"./chunk-OPSEYVJV.mjs\";\nimport { AuthContext, IsomorphicClerkContext, __experimental_CheckoutProvider, __experimental_PaymentElement, __experimental_PaymentElementProvider, __experimental_useCheckout, __experimental_usePaymentElement, errorThrower, multipleClerkProvidersError, setErrorThrowerOptions, unsupportedNonBrowserDomainOrProxyUrlFunction, useAuth, useClerk, useEmailLink, useOrganization, useOrganizationList, useReverification, useSession, useSessionList, useSignIn, useSignUp, useUser, withClerk } from \"./chunk-KVSNHZPC.mjs\";\nimport { __privateAdd, __privateGet, __privateMethod, __privateSet } from \"./chunk-OANWQR3B.mjs\";\n\n// src/polyfills.ts\nif (typeof window !== \"undefined\" && !window.global) {\n  window.global = typeof global === \"undefined\" ? window : global;\n}\n\n// src/index.ts\nimport { setClerkJsLoadingErrorPackageName } from \"@clerk/shared/loadClerkJsScript\";\n\n// src/components/SignInButton.tsx\nimport React from \"react\";\nvar SignInButton = withClerk(({\n  clerk,\n  children,\n  ...props\n}) => {\n  const {\n    signUpFallbackRedirectUrl,\n    forceRedirectUrl,\n    fallbackRedirectUrl,\n    signUpForceRedirectUrl,\n    mode,\n    initialValues,\n    withSignUp,\n    oauthFlow,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign in\");\n  const child = assertSingleChild(children)(\"SignInButton\");\n  const clickHandler = () => {\n    const opts = {\n      forceRedirectUrl,\n      fallbackRedirectUrl,\n      signUpFallbackRedirectUrl,\n      signUpForceRedirectUrl,\n      initialValues,\n      withSignUp,\n      oauthFlow\n    };\n    if (mode === \"modal\") {\n      return clerk.openSignIn({\n        ...opts,\n        appearance: props.appearance\n      });\n    }\n    return clerk.redirectToSignIn({\n      ...opts,\n      signInFallbackRedirectUrl: fallbackRedirectUrl,\n      signInForceRedirectUrl: forceRedirectUrl\n    });\n  };\n  const wrappedChildClickHandler = async e => {\n    if (child && typeof child === \"object\" && \"props\" in child) {\n      await safeExecute(child.props.onClick)(e);\n    }\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React.cloneElement(child, childProps);\n}, {\n  component: \"SignInButton\",\n  renderWhileLoading: true\n});\n\n// src/components/SignInWithMetamaskButton.tsx\nimport React2 from \"react\";\nvar SignInWithMetamaskButton = withClerk(({\n  clerk,\n  children,\n  ...props\n}) => {\n  const {\n    redirectUrl,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign in with Metamask\");\n  const child = assertSingleChild(children)(\"SignInWithMetamaskButton\");\n  const clickHandler = async () => {\n    async function authenticate() {\n      await clerk.authenticateWithMetamask({\n        redirectUrl: redirectUrl || void 0\n      });\n    }\n    void authenticate();\n  };\n  const wrappedChildClickHandler = async e => {\n    await safeExecute(child.props.onClick)(e);\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React2.cloneElement(child, childProps);\n}, {\n  component: \"SignInWithMetamask\",\n  renderWhileLoading: true\n});\n\n// src/components/SignOutButton.tsx\nimport React3 from \"react\";\nvar SignOutButton = withClerk(({\n  clerk,\n  children,\n  ...props\n}) => {\n  const {\n    redirectUrl = \"/\",\n    signOutOptions,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign out\");\n  const child = assertSingleChild(children)(\"SignOutButton\");\n  const clickHandler = () => clerk.signOut({\n    redirectUrl,\n    ...signOutOptions\n  });\n  const wrappedChildClickHandler = async e => {\n    await safeExecute(child.props.onClick)(e);\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React3.cloneElement(child, childProps);\n}, {\n  component: \"SignOutButton\",\n  renderWhileLoading: true\n});\n\n// src/components/SignUpButton.tsx\nimport React4 from \"react\";\nvar SignUpButton = withClerk(({\n  clerk,\n  children,\n  ...props\n}) => {\n  const {\n    fallbackRedirectUrl,\n    forceRedirectUrl,\n    signInFallbackRedirectUrl,\n    signInForceRedirectUrl,\n    mode,\n    initialValues,\n    oauthFlow,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign up\");\n  const child = assertSingleChild(children)(\"SignUpButton\");\n  const clickHandler = () => {\n    const opts = {\n      fallbackRedirectUrl,\n      forceRedirectUrl,\n      signInFallbackRedirectUrl,\n      signInForceRedirectUrl,\n      initialValues,\n      oauthFlow\n    };\n    if (mode === \"modal\") {\n      return clerk.openSignUp({\n        ...opts,\n        appearance: props.appearance,\n        unsafeMetadata: props.unsafeMetadata\n      });\n    }\n    return clerk.redirectToSignUp({\n      ...opts,\n      signUpFallbackRedirectUrl: fallbackRedirectUrl,\n      signUpForceRedirectUrl: forceRedirectUrl\n    });\n  };\n  const wrappedChildClickHandler = async e => {\n    if (child && typeof child === \"object\" && \"props\" in child) {\n      await safeExecute(child.props.onClick)(e);\n    }\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React4.cloneElement(child, childProps);\n}, {\n  component: \"SignUpButton\",\n  renderWhileLoading: true\n});\n\n// src/contexts/ClerkProvider.tsx\nimport { isPublishableKey } from \"@clerk/shared/keys\";\nimport React6 from \"react\";\n\n// src/contexts/ClerkContextProvider.tsx\nimport { deriveState } from \"@clerk/shared/deriveState\";\nimport { __experimental_CheckoutProvider as CheckoutProvider, ClientContext, OrganizationProvider, SessionContext, UserContext } from \"@clerk/shared/react\";\nimport React5 from \"react\";\n\n// src/isomorphicClerk.ts\nimport { inBrowser as inBrowser2 } from \"@clerk/shared/browser\";\nimport { clerkEvents, createClerkEventBus } from \"@clerk/shared/clerkEventBus\";\nimport { loadClerkJsScript } from \"@clerk/shared/loadClerkJsScript\";\nimport { handleValueOrFn } from \"@clerk/shared/utils\";\n\n// src/stateProxy.ts\nimport { inBrowser } from \"@clerk/shared/browser\";\nvar defaultErrors = () => ({\n  fields: {\n    firstName: null,\n    lastName: null,\n    emailAddress: null,\n    identifier: null,\n    phoneNumber: null,\n    password: null,\n    username: null,\n    code: null,\n    captcha: null,\n    legalAccepted: null\n  },\n  raw: null,\n  global: null\n});\nvar StateProxy = class {\n  constructor(isomorphicClerk) {\n    this.isomorphicClerk = isomorphicClerk;\n    this.signInSignalProxy = this.buildSignInProxy();\n    this.signUpSignalProxy = this.buildSignUpProxy();\n  }\n  signInSignal() {\n    return this.signInSignalProxy;\n  }\n  signUpSignal() {\n    return this.signUpSignalProxy;\n  }\n  buildSignInProxy() {\n    const target = () => this.client.signIn.__internal_future;\n    return {\n      errors: defaultErrors(),\n      fetchStatus: \"idle\",\n      signIn: {\n        status: \"needs_identifier\",\n        availableStrategies: [],\n        isTransferable: false,\n        create: this.gateMethod(target, \"create\"),\n        password: this.gateMethod(target, \"password\"),\n        sso: this.gateMethod(target, \"sso\"),\n        finalize: this.gateMethod(target, \"finalize\"),\n        emailCode: this.wrapMethods(() => target().emailCode, [\"sendCode\", \"verifyCode\"]),\n        resetPasswordEmailCode: this.wrapMethods(() => target().resetPasswordEmailCode, [\"sendCode\", \"verifyCode\", \"submitPassword\"]),\n        phoneCode: this.wrapMethods(() => target().phoneCode, [\"sendCode\", \"verifyCode\"]),\n        mfa: this.wrapMethods(() => target().mfa, [\"sendPhoneCode\", \"verifyPhoneCode\", \"verifyTOTP\", \"verifyBackupCode\"])\n      }\n    };\n  }\n  buildSignUpProxy() {\n    const gateProperty = this.gateProperty.bind(this);\n    const gateMethod = this.gateMethod.bind(this);\n    const wrapMethods = this.wrapMethods.bind(this);\n    const target = () => this.client.signUp.__internal_future;\n    return {\n      errors: defaultErrors(),\n      fetchStatus: \"idle\",\n      signUp: {\n        get status() {\n          return gateProperty(target, \"status\", \"missing_requirements\");\n        },\n        get unverifiedFields() {\n          return gateProperty(target, \"unverifiedFields\", []);\n        },\n        get isTransferable() {\n          return gateProperty(target, \"isTransferable\", false);\n        },\n        create: gateMethod(target, \"create\"),\n        update: gateMethod(target, \"update\"),\n        sso: gateMethod(target, \"sso\"),\n        password: gateMethod(target, \"password\"),\n        finalize: gateMethod(target, \"finalize\"),\n        verifications: wrapMethods(() => target().verifications, [\"sendEmailCode\", \"verifyEmailCode\", \"sendPhoneCode\", \"verifyPhoneCode\"])\n      }\n    };\n  }\n  __internal_effect(_) {\n    throw new Error(\"__internal_effect called before Clerk is loaded\");\n  }\n  __internal_computed(_) {\n    throw new Error(\"__internal_computed called before Clerk is loaded\");\n  }\n  get client() {\n    const c = this.isomorphicClerk.client;\n    if (!c) {\n      throw new Error(\"Clerk client not ready\");\n    }\n    return c;\n  }\n  gateProperty(getTarget, key, defaultValue) {\n    return (() => {\n      if (!inBrowser() || !this.isomorphicClerk.loaded) {\n        return defaultValue;\n      }\n      const t = getTarget();\n      return t[key];\n    })();\n  }\n  gateMethod(getTarget, key) {\n    return async (...args) => {\n      if (!inBrowser()) {\n        return errorThrower.throw(`Attempted to call a method (${key}) that is not supported on the server.`);\n      }\n      if (!this.isomorphicClerk.loaded) {\n        await new Promise(resolve => this.isomorphicClerk.addOnLoaded(resolve));\n      }\n      const t = getTarget();\n      return t[key].apply(t, args);\n    };\n  }\n  wrapMethods(getTarget, keys) {\n    return Object.fromEntries(keys.map(k => [k, this.gateMethod(getTarget, k)]));\n  }\n};\n\n// src/isomorphicClerk.ts\nif (typeof globalThis.__BUILD_DISABLE_RHC__ === \"undefined\") {\n  globalThis.__BUILD_DISABLE_RHC__ = false;\n}\nvar SDK_METADATA = {\n  name: \"@clerk/clerk-react\",\n  version: \"5.47.0\",\n  environment: process.env.NODE_ENV\n};\nvar _status, _domain, _proxyUrl, _publishableKey, _eventBus, _stateProxy, _instance, _IsomorphicClerk_instances, waitForClerkJS_fn;\nvar _IsomorphicClerk = class _IsomorphicClerk {\n  constructor(options) {\n    __privateAdd(this, _IsomorphicClerk_instances);\n    this.clerkjs = null;\n    this.preopenOneTap = null;\n    this.preopenUserVerification = null;\n    this.preopenSignIn = null;\n    this.preopenCheckout = null;\n    this.preopenPlanDetails = null;\n    this.preopenSubscriptionDetails = null;\n    this.preopenSignUp = null;\n    this.preopenUserProfile = null;\n    this.preopenOrganizationProfile = null;\n    this.preopenCreateOrganization = null;\n    this.preOpenWaitlist = null;\n    this.premountSignInNodes = /* @__PURE__ */new Map();\n    this.premountSignUpNodes = /* @__PURE__ */new Map();\n    this.premountUserProfileNodes = /* @__PURE__ */new Map();\n    this.premountUserButtonNodes = /* @__PURE__ */new Map();\n    this.premountOrganizationProfileNodes = /* @__PURE__ */new Map();\n    this.premountCreateOrganizationNodes = /* @__PURE__ */new Map();\n    this.premountOrganizationSwitcherNodes = /* @__PURE__ */new Map();\n    this.premountOrganizationListNodes = /* @__PURE__ */new Map();\n    this.premountMethodCalls = /* @__PURE__ */new Map();\n    this.premountWaitlistNodes = /* @__PURE__ */new Map();\n    this.premountPricingTableNodes = /* @__PURE__ */new Map();\n    this.premountApiKeysNodes = /* @__PURE__ */new Map();\n    this.premountOAuthConsentNodes = /* @__PURE__ */new Map();\n    this.premountTaskChooseOrganizationNodes = /* @__PURE__ */new Map();\n    // A separate Map of `addListener` method calls to handle multiple listeners.\n    this.premountAddListenerCalls = /* @__PURE__ */new Map();\n    this.loadedListeners = [];\n    __privateAdd(this, _status, \"loading\");\n    __privateAdd(this, _domain);\n    __privateAdd(this, _proxyUrl);\n    __privateAdd(this, _publishableKey);\n    __privateAdd(this, _eventBus, createClerkEventBus());\n    __privateAdd(this, _stateProxy);\n    this.buildSignInUrl = opts => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildSignInUrl(opts)) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildSignInUrl\", callback);\n      }\n    };\n    this.buildSignUpUrl = opts => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildSignUpUrl(opts)) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildSignUpUrl\", callback);\n      }\n    };\n    this.buildAfterSignInUrl = (...args) => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignInUrl(...args)) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignInUrl\", callback);\n      }\n    };\n    this.buildAfterSignUpUrl = (...args) => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignUpUrl(...args)) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignUpUrl\", callback);\n      }\n    };\n    this.buildAfterSignOutUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignOutUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignOutUrl\", callback);\n      }\n    };\n    this.buildNewSubscriptionRedirectUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildNewSubscriptionRedirectUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildNewSubscriptionRedirectUrl\", callback);\n      }\n    };\n    this.buildAfterMultiSessionSingleSignOutUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterMultiSessionSingleSignOutUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterMultiSessionSingleSignOutUrl\", callback);\n      }\n    };\n    this.buildUserProfileUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildUserProfileUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildUserProfileUrl\", callback);\n      }\n    };\n    this.buildCreateOrganizationUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildCreateOrganizationUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildCreateOrganizationUrl\", callback);\n      }\n    };\n    this.buildOrganizationProfileUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildOrganizationProfileUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildOrganizationProfileUrl\", callback);\n      }\n    };\n    this.buildWaitlistUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildWaitlistUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildWaitlistUrl\", callback);\n      }\n    };\n    this.buildTasksUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildTasksUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildTasksUrl\", callback);\n      }\n    };\n    this.buildUrlWithAuth = to => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildUrlWithAuth(to)) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildUrlWithAuth\", callback);\n      }\n    };\n    this.handleUnauthenticated = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.handleUnauthenticated();\n      };\n      if (this.clerkjs && this.loaded) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"handleUnauthenticated\", callback);\n      }\n    };\n    this.on = (...args) => {\n      var _a;\n      if ((_a = this.clerkjs) == null ? void 0 : _a.on) {\n        return this.clerkjs.on(...args);\n      } else {\n        __privateGet(this, _eventBus).on(...args);\n      }\n    };\n    this.off = (...args) => {\n      var _a;\n      if ((_a = this.clerkjs) == null ? void 0 : _a.off) {\n        return this.clerkjs.off(...args);\n      } else {\n        __privateGet(this, _eventBus).off(...args);\n      }\n    };\n    /**\n     * @deprecated Please use `addStatusListener`. This api will be removed in the next major.\n     */\n    this.addOnLoaded = cb => {\n      this.loadedListeners.push(cb);\n      if (this.loaded) {\n        this.emitLoaded();\n      }\n    };\n    /**\n     * @deprecated Please use `__internal_setStatus`. This api will be removed in the next major.\n     */\n    this.emitLoaded = () => {\n      this.loadedListeners.forEach(cb => cb());\n      this.loadedListeners = [];\n    };\n    this.beforeLoad = clerkjs => {\n      if (!clerkjs) {\n        throw new Error(\"Failed to hydrate latest Clerk JS\");\n      }\n    };\n    this.hydrateClerkJS = clerkjs => {\n      var _a;\n      if (!clerkjs) {\n        throw new Error(\"Failed to hydrate latest Clerk JS\");\n      }\n      this.clerkjs = clerkjs;\n      this.premountMethodCalls.forEach(cb => cb());\n      this.premountAddListenerCalls.forEach((listenerHandlers, listener) => {\n        listenerHandlers.nativeUnsubscribe = clerkjs.addListener(listener);\n      });\n      (_a = __privateGet(this, _eventBus).internal.retrieveListeners(\"status\")) == null ? void 0 : _a.forEach(listener => {\n        this.on(\"status\", listener, {\n          notify: true\n        });\n      });\n      if (this.preopenSignIn !== null) {\n        clerkjs.openSignIn(this.preopenSignIn);\n      }\n      if (this.preopenCheckout !== null) {\n        clerkjs.__internal_openCheckout(this.preopenCheckout);\n      }\n      if (this.preopenPlanDetails !== null) {\n        clerkjs.__internal_openPlanDetails(this.preopenPlanDetails);\n      }\n      if (this.preopenSubscriptionDetails !== null) {\n        clerkjs.__internal_openSubscriptionDetails(this.preopenSubscriptionDetails);\n      }\n      if (this.preopenSignUp !== null) {\n        clerkjs.openSignUp(this.preopenSignUp);\n      }\n      if (this.preopenUserProfile !== null) {\n        clerkjs.openUserProfile(this.preopenUserProfile);\n      }\n      if (this.preopenUserVerification !== null) {\n        clerkjs.__internal_openReverification(this.preopenUserVerification);\n      }\n      if (this.preopenOneTap !== null) {\n        clerkjs.openGoogleOneTap(this.preopenOneTap);\n      }\n      if (this.preopenOrganizationProfile !== null) {\n        clerkjs.openOrganizationProfile(this.preopenOrganizationProfile);\n      }\n      if (this.preopenCreateOrganization !== null) {\n        clerkjs.openCreateOrganization(this.preopenCreateOrganization);\n      }\n      if (this.preOpenWaitlist !== null) {\n        clerkjs.openWaitlist(this.preOpenWaitlist);\n      }\n      this.premountSignInNodes.forEach((props, node) => {\n        clerkjs.mountSignIn(node, props);\n      });\n      this.premountSignUpNodes.forEach((props, node) => {\n        clerkjs.mountSignUp(node, props);\n      });\n      this.premountUserProfileNodes.forEach((props, node) => {\n        clerkjs.mountUserProfile(node, props);\n      });\n      this.premountUserButtonNodes.forEach((props, node) => {\n        clerkjs.mountUserButton(node, props);\n      });\n      this.premountOrganizationListNodes.forEach((props, node) => {\n        clerkjs.mountOrganizationList(node, props);\n      });\n      this.premountWaitlistNodes.forEach((props, node) => {\n        clerkjs.mountWaitlist(node, props);\n      });\n      this.premountPricingTableNodes.forEach((props, node) => {\n        clerkjs.mountPricingTable(node, props);\n      });\n      this.premountApiKeysNodes.forEach((props, node) => {\n        clerkjs.mountApiKeys(node, props);\n      });\n      this.premountOAuthConsentNodes.forEach((props, node) => {\n        clerkjs.__internal_mountOAuthConsent(node, props);\n      });\n      this.premountTaskChooseOrganizationNodes.forEach((props, node) => {\n        clerkjs.mountTaskChooseOrganization(node, props);\n      });\n      if (typeof this.clerkjs.status === \"undefined\") {\n        __privateGet(this, _eventBus).emit(clerkEvents.Status, \"ready\");\n      }\n      this.emitLoaded();\n      return this.clerkjs;\n    };\n    this.__experimental_checkout = (...args) => {\n      var _a;\n      return (_a = this.clerkjs) == null ? void 0 : _a.__experimental_checkout(...args);\n    };\n    this.__unstable__updateProps = async props => {\n      const clerkjs = await __privateMethod(this, _IsomorphicClerk_instances, waitForClerkJS_fn).call(this);\n      if (clerkjs && \"__unstable__updateProps\" in clerkjs) {\n        return clerkjs.__unstable__updateProps(props);\n      }\n    };\n    /**\n     * `setActive` can be used to set the active session and/or organization.\n     */\n    this.setActive = params => {\n      if (this.clerkjs) {\n        return this.clerkjs.setActive(params);\n      } else {\n        return Promise.reject();\n      }\n    };\n    this.openSignIn = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openSignIn(props);\n      } else {\n        this.preopenSignIn = props;\n      }\n    };\n    this.closeSignIn = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeSignIn();\n      } else {\n        this.preopenSignIn = null;\n      }\n    };\n    this.__internal_openCheckout = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_openCheckout(props);\n      } else {\n        this.preopenCheckout = props;\n      }\n    };\n    this.__internal_closeCheckout = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_closeCheckout();\n      } else {\n        this.preopenCheckout = null;\n      }\n    };\n    this.__internal_openPlanDetails = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_openPlanDetails(props);\n      } else {\n        this.preopenPlanDetails = props;\n      }\n    };\n    this.__internal_closePlanDetails = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_closePlanDetails();\n      } else {\n        this.preopenPlanDetails = null;\n      }\n    };\n    this.__internal_openSubscriptionDetails = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_openSubscriptionDetails(props);\n      } else {\n        this.preopenSubscriptionDetails = props != null ? props : null;\n      }\n    };\n    this.__internal_closeSubscriptionDetails = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_closeSubscriptionDetails();\n      } else {\n        this.preopenSubscriptionDetails = null;\n      }\n    };\n    this.__internal_openReverification = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_openReverification(props);\n      } else {\n        this.preopenUserVerification = props;\n      }\n    };\n    this.__internal_closeReverification = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_closeReverification();\n      } else {\n        this.preopenUserVerification = null;\n      }\n    };\n    this.openGoogleOneTap = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openGoogleOneTap(props);\n      } else {\n        this.preopenOneTap = props;\n      }\n    };\n    this.closeGoogleOneTap = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeGoogleOneTap();\n      } else {\n        this.preopenOneTap = null;\n      }\n    };\n    this.openUserProfile = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openUserProfile(props);\n      } else {\n        this.preopenUserProfile = props;\n      }\n    };\n    this.closeUserProfile = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeUserProfile();\n      } else {\n        this.preopenUserProfile = null;\n      }\n    };\n    this.openOrganizationProfile = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openOrganizationProfile(props);\n      } else {\n        this.preopenOrganizationProfile = props;\n      }\n    };\n    this.closeOrganizationProfile = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeOrganizationProfile();\n      } else {\n        this.preopenOrganizationProfile = null;\n      }\n    };\n    this.openCreateOrganization = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openCreateOrganization(props);\n      } else {\n        this.preopenCreateOrganization = props;\n      }\n    };\n    this.closeCreateOrganization = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeCreateOrganization();\n      } else {\n        this.preopenCreateOrganization = null;\n      }\n    };\n    this.openWaitlist = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openWaitlist(props);\n      } else {\n        this.preOpenWaitlist = props;\n      }\n    };\n    this.closeWaitlist = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeWaitlist();\n      } else {\n        this.preOpenWaitlist = null;\n      }\n    };\n    this.openSignUp = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openSignUp(props);\n      } else {\n        this.preopenSignUp = props;\n      }\n    };\n    this.closeSignUp = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeSignUp();\n      } else {\n        this.preopenSignUp = null;\n      }\n    };\n    this.mountSignIn = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountSignIn(node, props);\n      } else {\n        this.premountSignInNodes.set(node, props);\n      }\n    };\n    this.unmountSignIn = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountSignIn(node);\n      } else {\n        this.premountSignInNodes.delete(node);\n      }\n    };\n    this.mountSignUp = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountSignUp(node, props);\n      } else {\n        this.premountSignUpNodes.set(node, props);\n      }\n    };\n    this.unmountSignUp = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountSignUp(node);\n      } else {\n        this.premountSignUpNodes.delete(node);\n      }\n    };\n    this.mountUserProfile = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountUserProfile(node, props);\n      } else {\n        this.premountUserProfileNodes.set(node, props);\n      }\n    };\n    this.unmountUserProfile = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountUserProfile(node);\n      } else {\n        this.premountUserProfileNodes.delete(node);\n      }\n    };\n    this.mountOrganizationProfile = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountOrganizationProfile(node, props);\n      } else {\n        this.premountOrganizationProfileNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationProfile = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountOrganizationProfile(node);\n      } else {\n        this.premountOrganizationProfileNodes.delete(node);\n      }\n    };\n    this.mountCreateOrganization = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountCreateOrganization(node, props);\n      } else {\n        this.premountCreateOrganizationNodes.set(node, props);\n      }\n    };\n    this.unmountCreateOrganization = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountCreateOrganization(node);\n      } else {\n        this.premountCreateOrganizationNodes.delete(node);\n      }\n    };\n    this.mountOrganizationSwitcher = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountOrganizationSwitcher(node, props);\n      } else {\n        this.premountOrganizationSwitcherNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationSwitcher = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountOrganizationSwitcher(node);\n      } else {\n        this.premountOrganizationSwitcherNodes.delete(node);\n      }\n    };\n    this.__experimental_prefetchOrganizationSwitcher = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.__experimental_prefetchOrganizationSwitcher();\n      };\n      if (this.clerkjs && this.loaded) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"__experimental_prefetchOrganizationSwitcher\", callback);\n      }\n    };\n    this.mountOrganizationList = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountOrganizationList(node, props);\n      } else {\n        this.premountOrganizationListNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationList = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountOrganizationList(node);\n      } else {\n        this.premountOrganizationListNodes.delete(node);\n      }\n    };\n    this.mountUserButton = (node, userButtonProps) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountUserButton(node, userButtonProps);\n      } else {\n        this.premountUserButtonNodes.set(node, userButtonProps);\n      }\n    };\n    this.unmountUserButton = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountUserButton(node);\n      } else {\n        this.premountUserButtonNodes.delete(node);\n      }\n    };\n    this.mountWaitlist = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountWaitlist(node, props);\n      } else {\n        this.premountWaitlistNodes.set(node, props);\n      }\n    };\n    this.unmountWaitlist = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountWaitlist(node);\n      } else {\n        this.premountWaitlistNodes.delete(node);\n      }\n    };\n    this.mountPricingTable = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountPricingTable(node, props);\n      } else {\n        this.premountPricingTableNodes.set(node, props);\n      }\n    };\n    this.unmountPricingTable = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountPricingTable(node);\n      } else {\n        this.premountPricingTableNodes.delete(node);\n      }\n    };\n    this.mountApiKeys = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountApiKeys(node, props);\n      } else {\n        this.premountApiKeysNodes.set(node, props);\n      }\n    };\n    this.unmountApiKeys = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountApiKeys(node);\n      } else {\n        this.premountApiKeysNodes.delete(node);\n      }\n    };\n    this.__internal_mountOAuthConsent = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_mountOAuthConsent(node, props);\n      } else {\n        this.premountOAuthConsentNodes.set(node, props);\n      }\n    };\n    this.__internal_unmountOAuthConsent = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_unmountOAuthConsent(node);\n      } else {\n        this.premountOAuthConsentNodes.delete(node);\n      }\n    };\n    this.mountTaskChooseOrganization = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountTaskChooseOrganization(node, props);\n      } else {\n        this.premountTaskChooseOrganizationNodes.set(node, props);\n      }\n    };\n    this.unmountTaskChooseOrganization = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountTaskChooseOrganization(node);\n      } else {\n        this.premountTaskChooseOrganizationNodes.delete(node);\n      }\n    };\n    this.addListener = listener => {\n      if (this.clerkjs) {\n        return this.clerkjs.addListener(listener);\n      } else {\n        const unsubscribe = () => {\n          var _a;\n          const listenerHandlers = this.premountAddListenerCalls.get(listener);\n          if (listenerHandlers) {\n            (_a = listenerHandlers.nativeUnsubscribe) == null ? void 0 : _a.call(listenerHandlers);\n            this.premountAddListenerCalls.delete(listener);\n          }\n        };\n        this.premountAddListenerCalls.set(listener, {\n          unsubscribe,\n          nativeUnsubscribe: void 0\n        });\n        return unsubscribe;\n      }\n    };\n    this.navigate = to => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.navigate(to);\n      };\n      if (this.clerkjs && this.loaded) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"navigate\", callback);\n      }\n    };\n    this.redirectWithAuth = async (...args) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectWithAuth(...args);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectWithAuth\", callback);\n        return;\n      }\n    };\n    this.redirectToSignIn = async opts => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToSignIn(opts);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToSignIn\", callback);\n        return;\n      }\n    };\n    this.redirectToSignUp = async opts => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToSignUp(opts);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToSignUp\", callback);\n        return;\n      }\n    };\n    this.redirectToUserProfile = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToUserProfile();\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToUserProfile\", callback);\n        return;\n      }\n    };\n    this.redirectToAfterSignUp = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignUp();\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignUp\", callback);\n      }\n    };\n    this.redirectToAfterSignIn = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignIn();\n      };\n      if (this.clerkjs && this.loaded) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignIn\", callback);\n      }\n    };\n    this.redirectToAfterSignOut = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignOut();\n      };\n      if (this.clerkjs && this.loaded) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignOut\", callback);\n      }\n    };\n    this.redirectToOrganizationProfile = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToOrganizationProfile();\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToOrganizationProfile\", callback);\n        return;\n      }\n    };\n    this.redirectToCreateOrganization = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToCreateOrganization();\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToCreateOrganization\", callback);\n        return;\n      }\n    };\n    this.redirectToWaitlist = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToWaitlist();\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToWaitlist\", callback);\n        return;\n      }\n    };\n    this.redirectToTasks = async opts => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToTasks(opts);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToTasks\", callback);\n        return;\n      }\n    };\n    this.handleRedirectCallback = async params => {\n      var _a;\n      const callback = () => {\n        var _a2;\n        return (_a2 = this.clerkjs) == null ? void 0 : _a2.handleRedirectCallback(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        void ((_a = callback()) == null ? void 0 : _a.catch(() => {}));\n      } else {\n        this.premountMethodCalls.set(\"handleRedirectCallback\", callback);\n      }\n    };\n    this.handleGoogleOneTapCallback = async (signInOrUp, params) => {\n      var _a;\n      const callback = () => {\n        var _a2;\n        return (_a2 = this.clerkjs) == null ? void 0 : _a2.handleGoogleOneTapCallback(signInOrUp, params);\n      };\n      if (this.clerkjs && this.loaded) {\n        void ((_a = callback()) == null ? void 0 : _a.catch(() => {}));\n      } else {\n        this.premountMethodCalls.set(\"handleGoogleOneTapCallback\", callback);\n      }\n    };\n    this.handleEmailLinkVerification = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.handleEmailLinkVerification(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"handleEmailLinkVerification\", callback);\n      }\n    };\n    this.authenticateWithMetamask = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithMetamask(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithMetamask\", callback);\n      }\n    };\n    this.authenticateWithCoinbaseWallet = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithCoinbaseWallet(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithCoinbaseWallet\", callback);\n      }\n    };\n    this.authenticateWithBase = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithBase(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithBase\", callback);\n      }\n    };\n    this.authenticateWithOKXWallet = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithOKXWallet(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithOKXWallet\", callback);\n      }\n    };\n    this.authenticateWithWeb3 = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithWeb3(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithWeb3\", callback);\n      }\n    };\n    this.authenticateWithGoogleOneTap = async params => {\n      const clerkjs = await __privateMethod(this, _IsomorphicClerk_instances, waitForClerkJS_fn).call(this);\n      return clerkjs.authenticateWithGoogleOneTap(params);\n    };\n    this.__internal_loadStripeJs = async () => {\n      const clerkjs = await __privateMethod(this, _IsomorphicClerk_instances, waitForClerkJS_fn).call(this);\n      return clerkjs.__internal_loadStripeJs();\n    };\n    this.createOrganization = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.createOrganization(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"createOrganization\", callback);\n      }\n    };\n    this.getOrganization = async organizationId => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.getOrganization(organizationId);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"getOrganization\", callback);\n      }\n    };\n    this.joinWaitlist = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.joinWaitlist(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"joinWaitlist\", callback);\n      }\n    };\n    this.signOut = async (...args) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.signOut(...args);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"signOut\", callback);\n      }\n    };\n    const {\n      Clerk = null,\n      publishableKey\n    } = options || {};\n    __privateSet(this, _publishableKey, publishableKey);\n    __privateSet(this, _proxyUrl, options == null ? void 0 : options.proxyUrl);\n    __privateSet(this, _domain, options == null ? void 0 : options.domain);\n    this.options = options;\n    this.Clerk = Clerk;\n    this.mode = inBrowser2() ? \"browser\" : \"server\";\n    __privateSet(this, _stateProxy, new StateProxy(this));\n    if (!this.options.sdkMetadata) {\n      this.options.sdkMetadata = SDK_METADATA;\n    }\n    __privateGet(this, _eventBus).emit(clerkEvents.Status, \"loading\");\n    __privateGet(this, _eventBus).prioritizedOn(clerkEvents.Status, status => __privateSet(this, _status, status));\n    if (__privateGet(this, _publishableKey)) {\n      void this.loadClerkJS();\n    }\n  }\n  get publishableKey() {\n    return __privateGet(this, _publishableKey);\n  }\n  get loaded() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.loaded) || false;\n  }\n  get status() {\n    var _a;\n    if (!this.clerkjs) {\n      return __privateGet(this, _status);\n    }\n    return ((_a = this.clerkjs) == null ? void 0 : _a.status) || (\n    /**\n    * Support older clerk-js versions.\n    * If clerk-js is available but `.status` is missing it we need to fallback to `.loaded`.\n    * Since \"degraded\" an \"error\" did not exist before,\n    * map \"loaded\" to \"ready\" and \"not loaded\" to \"loading\".\n    */\n    this.clerkjs.loaded ? \"ready\" : \"loading\");\n  }\n  static getOrCreateInstance(options) {\n    if (!inBrowser2() || !__privateGet(this, _instance) || options.Clerk && __privateGet(this, _instance).Clerk !== options.Clerk ||\n    // Allow hot swapping PKs on the client\n    __privateGet(this, _instance).publishableKey !== options.publishableKey) {\n      __privateSet(this, _instance, new _IsomorphicClerk(options));\n    }\n    return __privateGet(this, _instance);\n  }\n  static clearInstance() {\n    __privateSet(this, _instance, null);\n  }\n  get domain() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return handleValueOrFn(__privateGet(this, _domain), new URL(window.location.href), \"\");\n    }\n    if (typeof __privateGet(this, _domain) === \"function\") {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return __privateGet(this, _domain) || \"\";\n  }\n  get proxyUrl() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return handleValueOrFn(__privateGet(this, _proxyUrl), new URL(window.location.href), \"\");\n    }\n    if (typeof __privateGet(this, _proxyUrl) === \"function\") {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return __privateGet(this, _proxyUrl) || \"\";\n  }\n  /**\n   * Accesses private options from the `Clerk` instance and defaults to\n   * `IsomorphicClerk` options when in SSR context.\n   *  @internal\n   */\n  __internal_getOption(key) {\n    var _a, _b;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.__internal_getOption) ? (_b = this.clerkjs) == null ? void 0 : _b.__internal_getOption(key) : this.options[key];\n  }\n  get sdkMetadata() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.sdkMetadata) || this.options.sdkMetadata || void 0;\n  }\n  get instanceType() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.instanceType;\n  }\n  get frontendApi() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.frontendApi) || \"\";\n  }\n  get isStandardBrowser() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.isStandardBrowser) || this.options.standardBrowser || false;\n  }\n  get isSatellite() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return handleValueOrFn(this.options.isSatellite, new URL(window.location.href), false);\n    }\n    if (typeof this.options.isSatellite === \"function\") {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return false;\n  }\n  async loadClerkJS() {\n    var _a;\n    if (this.mode !== \"browser\" || this.loaded) {\n      return;\n    }\n    if (typeof window !== \"undefined\") {\n      window.__clerk_publishable_key = __privateGet(this, _publishableKey);\n      window.__clerk_proxy_url = this.proxyUrl;\n      window.__clerk_domain = this.domain;\n    }\n    try {\n      if (this.Clerk) {\n        let c;\n        if (isConstructor(this.Clerk)) {\n          c = new this.Clerk(__privateGet(this, _publishableKey), {\n            proxyUrl: this.proxyUrl,\n            domain: this.domain\n          });\n          this.beforeLoad(c);\n          await c.load(this.options);\n        } else {\n          c = this.Clerk;\n          if (!c.loaded) {\n            this.beforeLoad(c);\n            await c.load(this.options);\n          }\n        }\n        global.Clerk = c;\n      } else if (!__BUILD_DISABLE_RHC__) {\n        if (!global.Clerk) {\n          await loadClerkJsScript({\n            ...this.options,\n            publishableKey: __privateGet(this, _publishableKey),\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n            nonce: this.options.nonce\n          });\n        }\n        if (!global.Clerk) {\n          throw new Error(\"Failed to download latest ClerkJS. Contact support@clerk.com.\");\n        }\n        this.beforeLoad(global.Clerk);\n        await global.Clerk.load(this.options);\n      }\n      if ((_a = global.Clerk) == null ? void 0 : _a.loaded) {\n        return this.hydrateClerkJS(global.Clerk);\n      }\n      return;\n    } catch (err) {\n      const error = err;\n      __privateGet(this, _eventBus).emit(clerkEvents.Status, \"error\");\n      console.error(error.stack || error.message || error);\n      return;\n    }\n  }\n  get version() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.version;\n  }\n  get client() {\n    if (this.clerkjs) {\n      return this.clerkjs.client;\n    } else {\n      return void 0;\n    }\n  }\n  get session() {\n    if (this.clerkjs) {\n      return this.clerkjs.session;\n    } else {\n      return void 0;\n    }\n  }\n  get user() {\n    if (this.clerkjs) {\n      return this.clerkjs.user;\n    } else {\n      return void 0;\n    }\n  }\n  get organization() {\n    if (this.clerkjs) {\n      return this.clerkjs.organization;\n    } else {\n      return void 0;\n    }\n  }\n  get telemetry() {\n    if (this.clerkjs) {\n      return this.clerkjs.telemetry;\n    } else {\n      return void 0;\n    }\n  }\n  get __unstable__environment() {\n    if (this.clerkjs) {\n      return this.clerkjs.__unstable__environment;\n    } else {\n      return void 0;\n    }\n  }\n  get isSignedIn() {\n    if (this.clerkjs) {\n      return this.clerkjs.isSignedIn;\n    } else {\n      return false;\n    }\n  }\n  get billing() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.billing;\n  }\n  get __internal_state() {\n    return this.loaded && this.clerkjs ? this.clerkjs.__internal_state : __privateGet(this, _stateProxy);\n  }\n  get apiKeys() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.apiKeys;\n  }\n  __unstable__setEnvironment(...args) {\n    if (this.clerkjs && \"__unstable__setEnvironment\" in this.clerkjs) {\n      this.clerkjs.__unstable__setEnvironment(args);\n    } else {\n      return void 0;\n    }\n  }\n};\n_status = new WeakMap();\n_domain = new WeakMap();\n_proxyUrl = new WeakMap();\n_publishableKey = new WeakMap();\n_eventBus = new WeakMap();\n_stateProxy = new WeakMap();\n_instance = new WeakMap();\n_IsomorphicClerk_instances = new WeakSet();\nwaitForClerkJS_fn = function () {\n  return new Promise(resolve => {\n    this.addOnLoaded(() => resolve(this.clerkjs));\n  });\n};\n__privateAdd(_IsomorphicClerk, _instance);\nvar IsomorphicClerk = _IsomorphicClerk;\n\n// src/contexts/ClerkContextProvider.tsx\nfunction ClerkContextProvider(props) {\n  const {\n    isomorphicClerkOptions,\n    initialState,\n    children\n  } = props;\n  const {\n    isomorphicClerk: clerk,\n    clerkStatus\n  } = useLoadedIsomorphicClerk(isomorphicClerkOptions);\n  const [state, setState] = React5.useState({\n    client: clerk.client,\n    session: clerk.session,\n    user: clerk.user,\n    organization: clerk.organization\n  });\n  React5.useEffect(() => {\n    return clerk.addListener(e => setState({\n      ...e\n    }));\n  }, []);\n  const derivedState = deriveState(clerk.loaded, state, initialState);\n  const clerkCtx = React5.useMemo(() => ({\n    value: clerk\n  }), [\n  // Only update the clerk reference on status change\n  clerkStatus]);\n  const clientCtx = React5.useMemo(() => ({\n    value: state.client\n  }), [state.client]);\n  const {\n    sessionId,\n    sessionStatus,\n    sessionClaims,\n    session,\n    userId,\n    user,\n    orgId,\n    actor,\n    organization,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    factorVerificationAge\n  } = derivedState;\n  const authCtx = React5.useMemo(() => {\n    const value = {\n      sessionId,\n      sessionStatus,\n      sessionClaims,\n      userId,\n      actor,\n      orgId,\n      orgRole,\n      orgSlug,\n      orgPermissions,\n      factorVerificationAge\n    };\n    return {\n      value\n    };\n  }, [sessionId, sessionStatus, userId, actor, orgId, orgRole, orgSlug, factorVerificationAge, sessionClaims == null ? void 0 : sessionClaims.__raw]);\n  const sessionCtx = React5.useMemo(() => ({\n    value: session\n  }), [sessionId, session]);\n  const userCtx = React5.useMemo(() => ({\n    value: user\n  }), [userId, user]);\n  const organizationCtx = React5.useMemo(() => {\n    const value = {\n      organization\n    };\n    return {\n      value\n    };\n  }, [orgId, organization]);\n  return (\n    // @ts-expect-error value passed is of type IsomorphicClerk where the context expects LoadedClerk\n    /* @__PURE__ */\n    React5.createElement(IsomorphicClerkContext.Provider, {\n      value: clerkCtx\n    }, /* @__PURE__ */React5.createElement(ClientContext.Provider, {\n      value: clientCtx\n    }, /* @__PURE__ */React5.createElement(SessionContext.Provider, {\n      value: sessionCtx\n    }, /* @__PURE__ */React5.createElement(OrganizationProvider, {\n      ...organizationCtx.value\n    }, /* @__PURE__ */React5.createElement(AuthContext.Provider, {\n      value: authCtx\n    }, /* @__PURE__ */React5.createElement(UserContext.Provider, {\n      value: userCtx\n    }, /* @__PURE__ */React5.createElement(CheckoutProvider, {\n      value: void 0\n    }, children)))))))\n  );\n}\nvar useLoadedIsomorphicClerk = options => {\n  const isomorphicClerkRef = React5.useRef(IsomorphicClerk.getOrCreateInstance(options));\n  const [clerkStatus, setClerkStatus] = React5.useState(isomorphicClerkRef.current.status);\n  React5.useEffect(() => {\n    void isomorphicClerkRef.current.__unstable__updateProps({\n      appearance: options.appearance\n    });\n  }, [options.appearance]);\n  React5.useEffect(() => {\n    void isomorphicClerkRef.current.__unstable__updateProps({\n      options\n    });\n  }, [options.localization]);\n  React5.useEffect(() => {\n    isomorphicClerkRef.current.on(\"status\", setClerkStatus);\n    return () => {\n      if (isomorphicClerkRef.current) {\n        isomorphicClerkRef.current.off(\"status\", setClerkStatus);\n      }\n      IsomorphicClerk.clearInstance();\n    };\n  }, []);\n  return {\n    isomorphicClerk: isomorphicClerkRef.current,\n    clerkStatus\n  };\n};\n\n// src/contexts/ClerkProvider.tsx\nfunction ClerkProviderBase(props) {\n  const {\n    initialState,\n    children,\n    __internal_bypassMissingPublishableKey,\n    ...restIsomorphicClerkOptions\n  } = props;\n  const {\n    publishableKey = \"\",\n    Clerk: userInitialisedClerk\n  } = restIsomorphicClerkOptions;\n  if (!userInitialisedClerk && !__internal_bypassMissingPublishableKey) {\n    if (!publishableKey) {\n      errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !isPublishableKey(publishableKey)) {\n      errorThrower.throwInvalidPublishableKeyError({\n        key: publishableKey\n      });\n    }\n  }\n  return /* @__PURE__ */React6.createElement(ClerkContextProvider, {\n    initialState,\n    isomorphicClerkOptions: restIsomorphicClerkOptions\n  }, children);\n}\nvar ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, \"ClerkProvider\", multipleClerkProvidersError);\nClerkProvider.displayName = \"ClerkProvider\";\n\n// src/index.ts\nsetErrorThrowerOptions({\n  packageName: \"@clerk/clerk-react\"\n});\nsetClerkJsLoadingErrorPackageName(\"@clerk/clerk-react\");\nexport { APIKeys, AuthenticateWithRedirectCallback, ClerkDegraded, ClerkFailed, ClerkLoaded, ClerkLoading, ClerkProvider, CreateOrganization, GoogleOneTap, OrganizationList, OrganizationProfile, OrganizationSwitcher, PricingTable, Protect, RedirectToCreateOrganization, RedirectToOrganizationProfile, RedirectToSignIn, RedirectToSignUp, RedirectToTasks, RedirectToUserProfile, SignIn, SignInButton, SignInWithMetamaskButton, SignOutButton, SignUp, SignUpButton, SignedIn, SignedOut, TaskChooseOrganization, UserButton, UserProfile, Waitlist, __experimental_CheckoutProvider, __experimental_PaymentElement, __experimental_PaymentElementProvider, __experimental_useCheckout, __experimental_usePaymentElement, useAuth, useClerk, useEmailLink, useOrganization, useOrganizationList, useReverification, useSession, useSessionList, useSignIn, useSignUp, useUser };","map":{"version":3,"names":["window","global","setClerkJsLoadingErrorPackageName","React","SignInButton","withClerk","clerk","children","props","signUpFallbackRedirectUrl","forceRedirectUrl","fallbackRedirectUrl","signUpForceRedirectUrl","mode","initialValues","withSignUp","oauthFlow","rest","normalizeWithDefaultValue","child","assertSingleChild","clickHandler","opts","openSignIn","appearance","redirectToSignIn","signInFallbackRedirectUrl","signInForceRedirectUrl","wrappedChildClickHandler","e","safeExecute","onClick","childProps","cloneElement","component","renderWhileLoading","React2","SignInWithMetamaskButton","redirectUrl","authenticate","authenticateWithMetamask","React3","SignOutButton","signOutOptions","signOut","React4","SignUpButton","openSignUp","unsafeMetadata","redirectToSignUp","isPublishableKey","React6","deriveState","__experimental_CheckoutProvider","CheckoutProvider","ClientContext","OrganizationProvider","SessionContext","UserContext","React5","inBrowser","inBrowser2","clerkEvents","createClerkEventBus","loadClerkJsScript","handleValueOrFn","defaultErrors","fields","firstName","lastName","emailAddress","identifier","phoneNumber","password","username","code","captcha","legalAccepted","raw","StateProxy","constructor","isomorphicClerk","signInSignalProxy","buildSignInProxy","signUpSignalProxy","buildSignUpProxy","signInSignal","signUpSignal","target","client","signIn","__internal_future","errors","fetchStatus","status","availableStrategies","isTransferable","create","gateMethod","sso","finalize","emailCode","wrapMethods","resetPasswordEmailCode","phoneCode","mfa","gateProperty","bind","signUp","unverifiedFields","update","verifications","__internal_effect","_","Error","__internal_computed","c","getTarget","key","defaultValue","loaded","t","args","errorThrower","throw","Promise","resolve","addOnLoaded","apply","keys","Object","fromEntries","map","k","globalThis","__BUILD_DISABLE_RHC__","SDK_METADATA","name","version","environment","process","env","NODE_ENV","_status","_domain","_proxyUrl","_publishableKey","_eventBus","_stateProxy","_instance","_IsomorphicClerk_instances","waitForClerkJS_fn","_IsomorphicClerk","options","__privateAdd","clerkjs","preopenOneTap","preopenUserVerification","preopenSignIn","preopenCheckout","preopenPlanDetails","preopenSubscriptionDetails","preopenSignUp","preopenUserProfile","preopenOrganizationProfile","preopenCreateOrganization","preOpenWaitlist","premountSignInNodes","Map","premountSignUpNodes","premountUserProfileNodes","premountUserButtonNodes","premountOrganizationProfileNodes","premountCreateOrganizationNodes","premountOrganizationSwitcherNodes","premountOrganizationListNodes","premountMethodCalls","premountWaitlistNodes","premountPricingTableNodes","premountApiKeysNodes","premountOAuthConsentNodes","premountTaskChooseOrganizationNodes","premountAddListenerCalls","loadedListeners","buildSignInUrl","callback","_a","set","buildSignUpUrl","buildAfterSignInUrl","buildAfterSignUpUrl","buildAfterSignOutUrl","buildNewSubscriptionRedirectUrl","buildAfterMultiSessionSingleSignOutUrl","buildUserProfileUrl","buildCreateOrganizationUrl","buildOrganizationProfileUrl","buildWaitlistUrl","buildTasksUrl","buildUrlWithAuth","to","handleUnauthenticated","on","__privateGet","off","cb","push","emitLoaded","forEach","beforeLoad","hydrateClerkJS","listenerHandlers","listener","nativeUnsubscribe","addListener","internal","retrieveListeners","notify","__internal_openCheckout","__internal_openPlanDetails","__internal_openSubscriptionDetails","openUserProfile","__internal_openReverification","openGoogleOneTap","openOrganizationProfile","openCreateOrganization","openWaitlist","node","mountSignIn","mountSignUp","mountUserProfile","mountUserButton","mountOrganizationList","mountWaitlist","mountPricingTable","mountApiKeys","__internal_mountOAuthConsent","mountTaskChooseOrganization","emit","Status","__experimental_checkout","__unstable__updateProps","__privateMethod","call","setActive","params","reject","closeSignIn","__internal_closeCheckout","__internal_closePlanDetails","__internal_closeSubscriptionDetails","__internal_closeReverification","closeGoogleOneTap","closeUserProfile","closeOrganizationProfile","closeCreateOrganization","closeWaitlist","closeSignUp","unmountSignIn","delete","unmountSignUp","unmountUserProfile","mountOrganizationProfile","unmountOrganizationProfile","mountCreateOrganization","unmountCreateOrganization","mountOrganizationSwitcher","unmountOrganizationSwitcher","__experimental_prefetchOrganizationSwitcher","unmountOrganizationList","userButtonProps","unmountUserButton","unmountWaitlist","unmountPricingTable","unmountApiKeys","__internal_unmountOAuthConsent","unmountTaskChooseOrganization","unsubscribe","get","navigate","redirectWithAuth","redirectToUserProfile","redirectToAfterSignUp","redirectToAfterSignIn","redirectToAfterSignOut","redirectToOrganizationProfile","redirectToCreateOrganization","redirectToWaitlist","redirectToTasks","handleRedirectCallback","_a2","catch","handleGoogleOneTapCallback","signInOrUp","handleEmailLinkVerification","authenticateWithCoinbaseWallet","authenticateWithBase","authenticateWithOKXWallet","authenticateWithWeb3","authenticateWithGoogleOneTap","__internal_loadStripeJs","createOrganization","getOrganization","organizationId","joinWaitlist","Clerk","publishableKey","__privateSet","proxyUrl","domain","sdkMetadata","prioritizedOn","loadClerkJS","getOrCreateInstance","clearInstance","location","URL","href","unsupportedNonBrowserDomainOrProxyUrlFunction","__internal_getOption","_b","instanceType","frontendApi","isStandardBrowser","standardBrowser","isSatellite","__clerk_publishable_key","__clerk_proxy_url","__clerk_domain","isConstructor","load","nonce","err","error","console","stack","message","session","user","organization","telemetry","__unstable__environment","isSignedIn","billing","__internal_state","apiKeys","__unstable__setEnvironment","WeakMap","WeakSet","IsomorphicClerk","ClerkContextProvider","isomorphicClerkOptions","initialState","clerkStatus","useLoadedIsomorphicClerk","state","setState","useState","useEffect","derivedState","clerkCtx","useMemo","value","clientCtx","sessionId","sessionStatus","sessionClaims","userId","orgId","actor","orgRole","orgSlug","orgPermissions","factorVerificationAge","authCtx","__raw","sessionCtx","userCtx","organizationCtx","createElement","IsomorphicClerkContext","Provider","AuthContext","isomorphicClerkRef","useRef","setClerkStatus","current","localization","ClerkProviderBase","__internal_bypassMissingPublishableKey","restIsomorphicClerkOptions","userInitialisedClerk","throwMissingPublishableKeyError","throwInvalidPublishableKeyError","ClerkProvider","withMaxAllowedInstancesGuard","multipleClerkProvidersError","displayName","setErrorThrowerOptions","packageName"],"sources":["D:\\hidc project\\hidc project\\frontend\\node_modules\\@clerk\\clerk-react\\src\\polyfills.ts","D:\\hidc project\\hidc project\\frontend\\node_modules\\@clerk\\clerk-react\\src\\index.ts","D:\\hidc project\\hidc project\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\SignInButton.tsx","D:\\hidc project\\hidc project\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\SignInWithMetamaskButton.tsx","D:\\hidc project\\hidc project\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\SignOutButton.tsx","D:\\hidc project\\hidc project\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\SignUpButton.tsx","D:\\hidc project\\hidc project\\frontend\\node_modules\\@clerk\\clerk-react\\src\\contexts\\ClerkProvider.tsx","D:\\hidc project\\hidc project\\frontend\\node_modules\\@clerk\\clerk-react\\src\\contexts\\ClerkContextProvider.tsx","D:\\hidc project\\hidc project\\frontend\\node_modules\\@clerk\\clerk-react\\src\\isomorphicClerk.ts","D:\\hidc project\\hidc project\\frontend\\node_modules\\@clerk\\clerk-react\\src\\stateProxy.ts"],"sourcesContent":["/**\n * Vite does not define `global` by default\n * One workaround is to use the `define` config prop\n * https://vitejs.dev/config/#define\n * We are solving this in the SDK level to reduce setup steps.\n */\nif (typeof window !== 'undefined' && !window.global) {\n  window.global = typeof global === 'undefined' ? window : global;\n}\n\nexport {};\n","import './polyfills';\n\nimport { setClerkJsLoadingErrorPackageName } from '@clerk/shared/loadClerkJsScript';\n\nimport { setErrorThrowerOptions } from './errors/errorThrower';\n\nexport * from './components';\nexport * from './contexts';\n\nexport * from './hooks';\nexport type { BrowserClerk, ClerkProp, HeadlessBrowserClerk, ClerkProviderProps } from './types';\n\nsetErrorThrowerOptions({ packageName: PACKAGE_NAME });\nsetClerkJsLoadingErrorPackageName(PACKAGE_NAME);\n","import type { SignInButtonProps, SignInProps } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignInButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<React.PropsWithChildren<SignInButtonProps>>) => {\n    const {\n      signUpFallbackRedirectUrl,\n      forceRedirectUrl,\n      fallbackRedirectUrl,\n      signUpForceRedirectUrl,\n      mode,\n      initialValues,\n      withSignUp,\n      oauthFlow,\n      ...rest\n    } = props;\n    children = normalizeWithDefaultValue(children, 'Sign in');\n    const child = assertSingleChild(children)('SignInButton');\n\n    const clickHandler = () => {\n      const opts: SignInProps = {\n        forceRedirectUrl,\n        fallbackRedirectUrl,\n        signUpFallbackRedirectUrl,\n        signUpForceRedirectUrl,\n        initialValues,\n        withSignUp,\n        oauthFlow,\n      };\n\n      if (mode === 'modal') {\n        return clerk.openSignIn({ ...opts, appearance: props.appearance });\n      }\n      return clerk.redirectToSignIn({\n        ...opts,\n        signInFallbackRedirectUrl: fallbackRedirectUrl,\n        signInForceRedirectUrl: forceRedirectUrl,\n      });\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      if (child && typeof child === 'object' && 'props' in child) {\n        await safeExecute(child.props.onClick)(e);\n      }\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignInButton', renderWhileLoading: true },\n);\n","import React from 'react';\n\nimport type { SignInWithMetamaskButtonProps, WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignInWithMetamaskButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<SignInWithMetamaskButtonProps>) => {\n    const { redirectUrl, ...rest } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign in with Metamask');\n    const child = assertSingleChild(children)('SignInWithMetamaskButton');\n\n    // TODO: Properly fix this code\n    // eslint-disable-next-line @typescript-eslint/require-await\n    const clickHandler = async () => {\n      async function authenticate() {\n        await clerk.authenticateWithMetamask({ redirectUrl: redirectUrl || undefined });\n      }\n      void authenticate();\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      await safeExecute((child as any).props.onClick)(e);\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignInWithMetamask', renderWhileLoading: true },\n);\n","import type { SignOutOptions } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport type SignOutButtonProps = {\n  redirectUrl?: string;\n  signOutOptions?: SignOutOptions;\n  children?: React.ReactNode;\n};\n\nexport const SignOutButton = withClerk(\n  ({ clerk, children, ...props }: React.PropsWithChildren<WithClerkProp<SignOutButtonProps>>) => {\n    const { redirectUrl = '/', signOutOptions, ...rest } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign out');\n    const child = assertSingleChild(children)('SignOutButton');\n\n    const clickHandler = () => clerk.signOut({ redirectUrl, ...signOutOptions });\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      await safeExecute((child as any).props.onClick)(e);\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignOutButton', renderWhileLoading: true },\n);\n","import type { SignUpButtonProps, SignUpProps } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignUpButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<React.PropsWithChildren<SignUpButtonProps>>) => {\n    const {\n      fallbackRedirectUrl,\n      forceRedirectUrl,\n      signInFallbackRedirectUrl,\n      signInForceRedirectUrl,\n      mode,\n      initialValues,\n      oauthFlow,\n      ...rest\n    } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign up');\n    const child = assertSingleChild(children)('SignUpButton');\n\n    const clickHandler = () => {\n      const opts: SignUpProps = {\n        fallbackRedirectUrl,\n        forceRedirectUrl,\n        signInFallbackRedirectUrl,\n        signInForceRedirectUrl,\n        initialValues,\n        oauthFlow,\n      };\n\n      if (mode === 'modal') {\n        return clerk.openSignUp({\n          ...opts,\n          appearance: props.appearance,\n          unsafeMetadata: props.unsafeMetadata,\n        });\n      }\n\n      return clerk.redirectToSignUp({\n        ...opts,\n        signUpFallbackRedirectUrl: fallbackRedirectUrl,\n        signUpForceRedirectUrl: forceRedirectUrl,\n      });\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      if (child && typeof child === 'object' && 'props' in child) {\n        await safeExecute(child.props.onClick)(e);\n      }\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignUpButton', renderWhileLoading: true },\n);\n","import { isPublishableKey } from '@clerk/shared/keys';\nimport React from 'react';\n\nimport { errorThrower } from '../errors/errorThrower';\nimport { multipleClerkProvidersError } from '../errors/messages';\nimport type { ClerkProviderProps } from '../types';\nimport { withMaxAllowedInstancesGuard } from '../utils';\nimport { ClerkContextProvider } from './ClerkContextProvider';\n\nfunction ClerkProviderBase(props: ClerkProviderProps) {\n  const { initialState, children, __internal_bypassMissingPublishableKey, ...restIsomorphicClerkOptions } = props;\n  const { publishableKey = '', Clerk: userInitialisedClerk } = restIsomorphicClerkOptions;\n\n  if (!userInitialisedClerk && !__internal_bypassMissingPublishableKey) {\n    if (!publishableKey) {\n      errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !isPublishableKey(publishableKey)) {\n      errorThrower.throwInvalidPublishableKeyError({ key: publishableKey });\n    }\n  }\n\n  return (\n    <ClerkContextProvider\n      initialState={initialState}\n      isomorphicClerkOptions={restIsomorphicClerkOptions}\n    >\n      {children}\n    </ClerkContextProvider>\n  );\n}\n\nconst ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, 'ClerkProvider', multipleClerkProvidersError);\n\nClerkProvider.displayName = 'ClerkProvider';\n\nexport { ClerkProvider };\n","import { deriveState } from '@clerk/shared/deriveState';\nimport {\n  __experimental_CheckoutProvider as CheckoutProvider,\n  ClientContext,\n  OrganizationProvider,\n  SessionContext,\n  UserContext,\n} from '@clerk/shared/react';\nimport type { ClientResource, InitialState, Resources } from '@clerk/types';\nimport React from 'react';\n\nimport { IsomorphicClerk } from '../isomorphicClerk';\nimport type { IsomorphicClerkOptions } from '../types';\nimport { AuthContext } from './AuthContext';\nimport { IsomorphicClerkContext } from './IsomorphicClerkContext';\n\ntype ClerkContextProvider = {\n  isomorphicClerkOptions: IsomorphicClerkOptions;\n  initialState: InitialState | undefined;\n  children: React.ReactNode;\n};\n\nexport type ClerkContextProviderState = Resources;\n\nexport function ClerkContextProvider(props: ClerkContextProvider) {\n  const { isomorphicClerkOptions, initialState, children } = props;\n  const { isomorphicClerk: clerk, clerkStatus } = useLoadedIsomorphicClerk(isomorphicClerkOptions);\n\n  const [state, setState] = React.useState<ClerkContextProviderState>({\n    client: clerk.client as ClientResource,\n    session: clerk.session,\n    user: clerk.user,\n    organization: clerk.organization,\n  });\n\n  React.useEffect(() => {\n    return clerk.addListener(e => setState({ ...e }));\n  }, []);\n\n  const derivedState = deriveState(clerk.loaded, state, initialState);\n  const clerkCtx = React.useMemo(\n    () => ({ value: clerk }),\n    [\n      // Only update the clerk reference on status change\n      clerkStatus,\n    ],\n  );\n  const clientCtx = React.useMemo(() => ({ value: state.client }), [state.client]);\n\n  const {\n    sessionId,\n    sessionStatus,\n    sessionClaims,\n    session,\n    userId,\n    user,\n    orgId,\n    actor,\n    organization,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    factorVerificationAge,\n  } = derivedState;\n\n  const authCtx = React.useMemo(() => {\n    const value = {\n      sessionId,\n      sessionStatus,\n      sessionClaims,\n      userId,\n      actor,\n      orgId,\n      orgRole,\n      orgSlug,\n      orgPermissions,\n      factorVerificationAge,\n    };\n    return { value };\n  }, [sessionId, sessionStatus, userId, actor, orgId, orgRole, orgSlug, factorVerificationAge, sessionClaims?.__raw]);\n\n  const sessionCtx = React.useMemo(() => ({ value: session }), [sessionId, session]);\n  const userCtx = React.useMemo(() => ({ value: user }), [userId, user]);\n  const organizationCtx = React.useMemo(() => {\n    const value = {\n      organization: organization,\n    };\n    return { value };\n  }, [orgId, organization]);\n\n  return (\n    // @ts-expect-error value passed is of type IsomorphicClerk where the context expects LoadedClerk\n    <IsomorphicClerkContext.Provider value={clerkCtx}>\n      <ClientContext.Provider value={clientCtx}>\n        <SessionContext.Provider value={sessionCtx}>\n          <OrganizationProvider {...organizationCtx.value}>\n            <AuthContext.Provider value={authCtx}>\n              <UserContext.Provider value={userCtx}>\n                <CheckoutProvider\n                  // @ts-expect-error - value is not used\n                  value={undefined}\n                >\n                  {children}\n                </CheckoutProvider>\n              </UserContext.Provider>\n            </AuthContext.Provider>\n          </OrganizationProvider>\n        </SessionContext.Provider>\n      </ClientContext.Provider>\n    </IsomorphicClerkContext.Provider>\n  );\n}\n\nconst useLoadedIsomorphicClerk = (options: IsomorphicClerkOptions) => {\n  const isomorphicClerkRef = React.useRef(IsomorphicClerk.getOrCreateInstance(options));\n  const [clerkStatus, setClerkStatus] = React.useState(isomorphicClerkRef.current.status);\n\n  React.useEffect(() => {\n    void isomorphicClerkRef.current.__unstable__updateProps({ appearance: options.appearance });\n  }, [options.appearance]);\n\n  React.useEffect(() => {\n    void isomorphicClerkRef.current.__unstable__updateProps({ options });\n  }, [options.localization]);\n\n  React.useEffect(() => {\n    isomorphicClerkRef.current.on('status', setClerkStatus);\n    return () => {\n      if (isomorphicClerkRef.current) {\n        isomorphicClerkRef.current.off('status', setClerkStatus);\n      }\n      IsomorphicClerk.clearInstance();\n    };\n  }, []);\n\n  return { isomorphicClerk: isomorphicClerkRef.current, clerkStatus };\n};\n","import { inBrowser } from '@clerk/shared/browser';\nimport { clerkEvents, createClerkEventBus } from '@clerk/shared/clerkEventBus';\nimport { loadClerkJsScript } from '@clerk/shared/loadClerkJsScript';\nimport { handleValueOrFn } from '@clerk/shared/utils';\nimport type {\n  __internal_CheckoutProps,\n  __internal_OAuthConsentProps,\n  __internal_PlanDetailsProps,\n  __internal_SubscriptionDetailsProps,\n  __internal_UserVerificationModalProps,\n  __internal_UserVerificationProps,\n  APIKeysNamespace,\n  APIKeysProps,\n  AuthenticateWithBaseParams,\n  AuthenticateWithCoinbaseWalletParams,\n  AuthenticateWithGoogleOneTapParams,\n  AuthenticateWithMetamaskParams,\n  AuthenticateWithOKXWalletParams,\n  Clerk,\n  ClerkAuthenticateWithWeb3Params,\n  ClerkOptions,\n  ClerkStatus,\n  ClientResource,\n  CommerceBillingNamespace,\n  CreateOrganizationParams,\n  CreateOrganizationProps,\n  DomainOrProxyUrl,\n  GoogleOneTapProps,\n  HandleEmailLinkVerificationParams,\n  HandleOAuthCallbackParams,\n  JoinWaitlistParams,\n  ListenerCallback,\n  LoadedClerk,\n  OrganizationListProps,\n  OrganizationProfileProps,\n  OrganizationResource,\n  OrganizationSwitcherProps,\n  PricingTableProps,\n  RedirectOptions,\n  SetActiveParams,\n  SignInProps,\n  SignInRedirectOptions,\n  SignInResource,\n  SignUpProps,\n  SignUpRedirectOptions,\n  SignUpResource,\n  State,\n  TaskChooseOrganizationProps,\n  TasksRedirectOptions,\n  UnsubscribeCallback,\n  UserButtonProps,\n  UserProfileProps,\n  WaitlistProps,\n  WaitlistResource,\n  Without,\n} from '@clerk/types';\n\nimport { errorThrower } from './errors/errorThrower';\nimport { unsupportedNonBrowserDomainOrProxyUrlFunction } from './errors/messages';\nimport { StateProxy } from './stateProxy';\nimport type {\n  BrowserClerk,\n  BrowserClerkConstructor,\n  ClerkProp,\n  HeadlessBrowserClerk,\n  HeadlessBrowserClerkConstructor,\n  IsomorphicClerkOptions,\n} from './types';\nimport { isConstructor } from './utils';\n\nif (typeof globalThis.__BUILD_DISABLE_RHC__ === 'undefined') {\n  globalThis.__BUILD_DISABLE_RHC__ = false;\n}\n\nconst SDK_METADATA = {\n  name: PACKAGE_NAME,\n  version: PACKAGE_VERSION,\n  environment: process.env.NODE_ENV,\n};\n\nexport interface Global {\n  Clerk?: HeadlessBrowserClerk | BrowserClerk;\n}\n\ndeclare const global: Global;\n\ntype GenericFunction<TArgs = never> = (...args: TArgs[]) => unknown;\n\ntype MethodName<T> = {\n  [P in keyof T]: T[P] extends GenericFunction ? P : never;\n}[keyof T];\n\ntype MethodCallback = () => Promise<unknown> | unknown;\n\ntype WithVoidReturn<F extends (...args: any) => any> = (\n  ...args: Parameters<F>\n) => ReturnType<F> extends Promise<infer T> ? Promise<T | void> : ReturnType<F> | void;\ntype WithVoidReturnFunctions<T> = {\n  [K in keyof T]: T[K] extends (...args: any) => any ? WithVoidReturn<T[K]> : T[K];\n};\n\ntype IsomorphicLoadedClerk = Without<\n  WithVoidReturnFunctions<LoadedClerk>,\n  | 'client'\n  | '__internal_addNavigationListener'\n  | '__internal_getCachedResources'\n  | '__internal_reloadInitialResources'\n  | 'billing'\n  | 'apiKeys'\n  | '__internal_setActiveInProgress'\n> & {\n  client: ClientResource | undefined;\n  billing: CommerceBillingNamespace | undefined;\n  apiKeys: APIKeysNamespace | undefined;\n};\n\nexport class IsomorphicClerk implements IsomorphicLoadedClerk {\n  private readonly mode: 'browser' | 'server';\n  private readonly options: IsomorphicClerkOptions;\n  private readonly Clerk: ClerkProp;\n  private clerkjs: BrowserClerk | HeadlessBrowserClerk | null = null;\n  private preopenOneTap?: null | GoogleOneTapProps = null;\n  private preopenUserVerification?: null | __internal_UserVerificationProps = null;\n  private preopenSignIn?: null | SignInProps = null;\n  private preopenCheckout?: null | __internal_CheckoutProps = null;\n  private preopenPlanDetails: null | __internal_PlanDetailsProps = null;\n  private preopenSubscriptionDetails: null | __internal_SubscriptionDetailsProps = null;\n  private preopenSignUp?: null | SignUpProps = null;\n  private preopenUserProfile?: null | UserProfileProps = null;\n  private preopenOrganizationProfile?: null | OrganizationProfileProps = null;\n  private preopenCreateOrganization?: null | CreateOrganizationProps = null;\n  private preOpenWaitlist?: null | WaitlistProps = null;\n  private premountSignInNodes = new Map<HTMLDivElement, SignInProps | undefined>();\n  private premountSignUpNodes = new Map<HTMLDivElement, SignUpProps | undefined>();\n  private premountUserProfileNodes = new Map<HTMLDivElement, UserProfileProps | undefined>();\n  private premountUserButtonNodes = new Map<HTMLDivElement, UserButtonProps | undefined>();\n  private premountOrganizationProfileNodes = new Map<HTMLDivElement, OrganizationProfileProps | undefined>();\n  private premountCreateOrganizationNodes = new Map<HTMLDivElement, CreateOrganizationProps | undefined>();\n  private premountOrganizationSwitcherNodes = new Map<HTMLDivElement, OrganizationSwitcherProps | undefined>();\n  private premountOrganizationListNodes = new Map<HTMLDivElement, OrganizationListProps | undefined>();\n  private premountMethodCalls = new Map<MethodName<BrowserClerk>, MethodCallback>();\n  private premountWaitlistNodes = new Map<HTMLDivElement, WaitlistProps | undefined>();\n  private premountPricingTableNodes = new Map<HTMLDivElement, PricingTableProps | undefined>();\n  private premountApiKeysNodes = new Map<HTMLDivElement, APIKeysProps | undefined>();\n  private premountOAuthConsentNodes = new Map<HTMLDivElement, __internal_OAuthConsentProps | undefined>();\n  private premountTaskChooseOrganizationNodes = new Map<HTMLDivElement, TaskChooseOrganizationProps | undefined>();\n  // A separate Map of `addListener` method calls to handle multiple listeners.\n  private premountAddListenerCalls = new Map<\n    ListenerCallback,\n    {\n      unsubscribe: UnsubscribeCallback;\n      nativeUnsubscribe?: UnsubscribeCallback;\n    }\n  >();\n  private loadedListeners: Array<() => void> = [];\n\n  #status: ClerkStatus = 'loading';\n  #domain: DomainOrProxyUrl['domain'];\n  #proxyUrl: DomainOrProxyUrl['proxyUrl'];\n  #publishableKey: string;\n  #eventBus = createClerkEventBus();\n  #stateProxy: StateProxy;\n\n  get publishableKey(): string {\n    return this.#publishableKey;\n  }\n\n  get loaded(): boolean {\n    return this.clerkjs?.loaded || false;\n  }\n\n  get status(): ClerkStatus {\n    /**\n     * If clerk-js is not available the returned value can either be \"loading\" or \"error\".\n     */\n    if (!this.clerkjs) {\n      return this.#status;\n    }\n    return (\n      this.clerkjs?.status ||\n      /**\n       * Support older clerk-js versions.\n       * If clerk-js is available but `.status` is missing it we need to fallback to `.loaded`.\n       * Since \"degraded\" an \"error\" did not exist before,\n       * map \"loaded\" to \"ready\" and \"not loaded\" to \"loading\".\n       */\n      (this.clerkjs.loaded ? 'ready' : 'loading')\n    );\n  }\n\n  static #instance: IsomorphicClerk | null | undefined;\n\n  static getOrCreateInstance(options: IsomorphicClerkOptions) {\n    // During SSR: a new instance should be created for every request\n    // During CSR: use the cached instance for the whole lifetime of the app\n    // Also will recreate the instance if the provided Clerk instance changes\n    // This method should be idempotent in both scenarios\n    if (\n      !inBrowser() ||\n      !this.#instance ||\n      (options.Clerk && this.#instance.Clerk !== options.Clerk) ||\n      // Allow hot swapping PKs on the client\n      this.#instance.publishableKey !== options.publishableKey\n    ) {\n      this.#instance = new IsomorphicClerk(options);\n    }\n    return this.#instance;\n  }\n\n  static clearInstance() {\n    this.#instance = null;\n  }\n\n  get domain(): string {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use domain as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.#domain, new URL(window.location.href), '');\n    }\n    if (typeof this.#domain === 'function') {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return this.#domain || '';\n  }\n\n  get proxyUrl(): string {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use proxy as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.#proxyUrl, new URL(window.location.href), '');\n    }\n    if (typeof this.#proxyUrl === 'function') {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return this.#proxyUrl || '';\n  }\n\n  /**\n   * Accesses private options from the `Clerk` instance and defaults to\n   * `IsomorphicClerk` options when in SSR context.\n   *  @internal\n   */\n  public __internal_getOption<K extends keyof ClerkOptions>(key: K): ClerkOptions[K] | undefined {\n    return this.clerkjs?.__internal_getOption ? this.clerkjs?.__internal_getOption(key) : this.options[key];\n  }\n\n  constructor(options: IsomorphicClerkOptions) {\n    const { Clerk = null, publishableKey } = options || {};\n    this.#publishableKey = publishableKey;\n    this.#proxyUrl = options?.proxyUrl;\n    this.#domain = options?.domain;\n    this.options = options;\n    this.Clerk = Clerk;\n    this.mode = inBrowser() ? 'browser' : 'server';\n    this.#stateProxy = new StateProxy(this);\n\n    if (!this.options.sdkMetadata) {\n      this.options.sdkMetadata = SDK_METADATA;\n    }\n    this.#eventBus.emit(clerkEvents.Status, 'loading');\n    this.#eventBus.prioritizedOn(clerkEvents.Status, status => (this.#status = status));\n\n    if (this.#publishableKey) {\n      void this.loadClerkJS();\n    }\n  }\n\n  get sdkMetadata() {\n    return this.clerkjs?.sdkMetadata || this.options.sdkMetadata || undefined;\n  }\n\n  get instanceType() {\n    return this.clerkjs?.instanceType;\n  }\n\n  get frontendApi() {\n    return this.clerkjs?.frontendApi || '';\n  }\n\n  get isStandardBrowser() {\n    return this.clerkjs?.isStandardBrowser || this.options.standardBrowser || false;\n  }\n\n  get isSatellite() {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use domain as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.options.isSatellite, new URL(window.location.href), false);\n    }\n    if (typeof this.options.isSatellite === 'function') {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return false;\n  }\n\n  buildSignInUrl = (opts?: RedirectOptions): string | void => {\n    const callback = () => this.clerkjs?.buildSignInUrl(opts) || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildSignInUrl', callback);\n    }\n  };\n\n  buildSignUpUrl = (opts?: RedirectOptions): string | void => {\n    const callback = () => this.clerkjs?.buildSignUpUrl(opts) || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildSignUpUrl', callback);\n    }\n  };\n\n  buildAfterSignInUrl = (...args: Parameters<Clerk['buildAfterSignInUrl']>): string | void => {\n    const callback = () => this.clerkjs?.buildAfterSignInUrl(...args) || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterSignInUrl', callback);\n    }\n  };\n\n  buildAfterSignUpUrl = (...args: Parameters<Clerk['buildAfterSignUpUrl']>): string | void => {\n    const callback = () => this.clerkjs?.buildAfterSignUpUrl(...args) || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterSignUpUrl', callback);\n    }\n  };\n\n  buildAfterSignOutUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildAfterSignOutUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterSignOutUrl', callback);\n    }\n  };\n\n  buildNewSubscriptionRedirectUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildNewSubscriptionRedirectUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildNewSubscriptionRedirectUrl', callback);\n    }\n  };\n\n  buildAfterMultiSessionSingleSignOutUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildAfterMultiSessionSingleSignOutUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterMultiSessionSingleSignOutUrl', callback);\n    }\n  };\n\n  buildUserProfileUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildUserProfileUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildUserProfileUrl', callback);\n    }\n  };\n\n  buildCreateOrganizationUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildCreateOrganizationUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildCreateOrganizationUrl', callback);\n    }\n  };\n\n  buildOrganizationProfileUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildOrganizationProfileUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildOrganizationProfileUrl', callback);\n    }\n  };\n\n  buildWaitlistUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildWaitlistUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildWaitlistUrl', callback);\n    }\n  };\n\n  buildTasksUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildTasksUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildTasksUrl', callback);\n    }\n  };\n\n  buildUrlWithAuth = (to: string): string | void => {\n    const callback = () => this.clerkjs?.buildUrlWithAuth(to) || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildUrlWithAuth', callback);\n    }\n  };\n\n  handleUnauthenticated = async () => {\n    const callback = () => this.clerkjs?.handleUnauthenticated();\n    if (this.clerkjs && this.loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('handleUnauthenticated', callback);\n    }\n  };\n\n  #waitForClerkJS(): Promise<HeadlessBrowserClerk | BrowserClerk> {\n    return new Promise<HeadlessBrowserClerk | BrowserClerk>(resolve => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.addOnLoaded(() => resolve(this.clerkjs!));\n    });\n  }\n\n  async loadClerkJS(): Promise<HeadlessBrowserClerk | BrowserClerk | undefined> {\n    if (this.mode !== 'browser' || this.loaded) {\n      return;\n    }\n\n    // Store frontendAPI value on window as a fallback. This value can be used as a\n    // fallback during ClerkJS hot loading in case ClerkJS fails to find the\n    // \"data-clerk-frontend-api\" attribute on its script tag.\n\n    // This can happen when the DOM is altered completely during client rehydration.\n    // For example, in Remix with React 18 the document changes completely via `hydrateRoot(document)`.\n\n    // For more information refer to:\n    // - https://github.com/remix-run/remix/issues/2947\n    // - https://github.com/facebook/react/issues/24430\n    if (typeof window !== 'undefined') {\n      window.__clerk_publishable_key = this.#publishableKey;\n      window.__clerk_proxy_url = this.proxyUrl;\n      window.__clerk_domain = this.domain;\n    }\n\n    try {\n      if (this.Clerk) {\n        // Set a fixed Clerk version\n        let c: ClerkProp;\n\n        if (isConstructor<BrowserClerkConstructor | HeadlessBrowserClerkConstructor>(this.Clerk)) {\n          // Construct a new Clerk object if a constructor is passed\n          c = new this.Clerk(this.#publishableKey, {\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n          } as any);\n\n          this.beforeLoad(c);\n          await c.load(this.options);\n        } else {\n          // Otherwise use the instantiated Clerk object\n          c = this.Clerk;\n          if (!c.loaded) {\n            this.beforeLoad(c);\n            await c.load(this.options);\n          }\n        }\n\n        global.Clerk = c;\n      } else if (!__BUILD_DISABLE_RHC__) {\n        // Hot-load latest ClerkJS from Clerk CDN\n        if (!global.Clerk) {\n          await loadClerkJsScript({\n            ...this.options,\n            publishableKey: this.#publishableKey,\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n            nonce: this.options.nonce,\n          });\n        }\n\n        if (!global.Clerk) {\n          throw new Error('Failed to download latest ClerkJS. Contact support@clerk.com.');\n        }\n\n        this.beforeLoad(global.Clerk);\n        await global.Clerk.load(this.options);\n      }\n\n      if (global.Clerk?.loaded) {\n        return this.hydrateClerkJS(global.Clerk);\n      }\n      return;\n    } catch (err) {\n      const error = err as Error;\n      this.#eventBus.emit(clerkEvents.Status, 'error');\n      console.error(error.stack || error.message || error);\n      return;\n    }\n  }\n\n  public on: Clerk['on'] = (...args) => {\n    // Support older clerk-js versions.\n    if (this.clerkjs?.on) {\n      return this.clerkjs.on(...args);\n    } else {\n      this.#eventBus.on(...args);\n    }\n  };\n\n  public off: Clerk['off'] = (...args) => {\n    // Support older clerk-js versions.\n    if (this.clerkjs?.off) {\n      return this.clerkjs.off(...args);\n    } else {\n      this.#eventBus.off(...args);\n    }\n  };\n\n  /**\n   * @deprecated Please use `addStatusListener`. This api will be removed in the next major.\n   */\n  public addOnLoaded = (cb: () => void) => {\n    this.loadedListeners.push(cb);\n    /**\n     * When IsomorphicClerk is loaded execute the callback directly\n     */\n    if (this.loaded) {\n      this.emitLoaded();\n    }\n  };\n\n  /**\n   * @deprecated Please use `__internal_setStatus`. This api will be removed in the next major.\n   */\n  public emitLoaded = () => {\n    this.loadedListeners.forEach(cb => cb());\n    this.loadedListeners = [];\n  };\n\n  private beforeLoad = (clerkjs: BrowserClerk | HeadlessBrowserClerk | undefined) => {\n    if (!clerkjs) {\n      throw new Error('Failed to hydrate latest Clerk JS');\n    }\n  };\n\n  private hydrateClerkJS = (clerkjs: BrowserClerk | HeadlessBrowserClerk | undefined) => {\n    if (!clerkjs) {\n      throw new Error('Failed to hydrate latest Clerk JS');\n    }\n\n    this.clerkjs = clerkjs;\n\n    this.premountMethodCalls.forEach(cb => cb());\n    this.premountAddListenerCalls.forEach((listenerHandlers, listener) => {\n      listenerHandlers.nativeUnsubscribe = clerkjs.addListener(listener);\n    });\n\n    this.#eventBus.internal.retrieveListeners('status')?.forEach(listener => {\n      // Since clerkjs exists it will call `this.clerkjs.on('status', listener)`\n      this.on('status', listener, { notify: true });\n    });\n\n    if (this.preopenSignIn !== null) {\n      clerkjs.openSignIn(this.preopenSignIn);\n    }\n\n    if (this.preopenCheckout !== null) {\n      clerkjs.__internal_openCheckout(this.preopenCheckout);\n    }\n\n    if (this.preopenPlanDetails !== null) {\n      clerkjs.__internal_openPlanDetails(this.preopenPlanDetails);\n    }\n\n    if (this.preopenSubscriptionDetails !== null) {\n      clerkjs.__internal_openSubscriptionDetails(this.preopenSubscriptionDetails);\n    }\n\n    if (this.preopenSignUp !== null) {\n      clerkjs.openSignUp(this.preopenSignUp);\n    }\n\n    if (this.preopenUserProfile !== null) {\n      clerkjs.openUserProfile(this.preopenUserProfile);\n    }\n\n    if (this.preopenUserVerification !== null) {\n      clerkjs.__internal_openReverification(this.preopenUserVerification);\n    }\n\n    if (this.preopenOneTap !== null) {\n      clerkjs.openGoogleOneTap(this.preopenOneTap);\n    }\n\n    if (this.preopenOrganizationProfile !== null) {\n      clerkjs.openOrganizationProfile(this.preopenOrganizationProfile);\n    }\n\n    if (this.preopenCreateOrganization !== null) {\n      clerkjs.openCreateOrganization(this.preopenCreateOrganization);\n    }\n\n    if (this.preOpenWaitlist !== null) {\n      clerkjs.openWaitlist(this.preOpenWaitlist);\n    }\n\n    this.premountSignInNodes.forEach((props, node) => {\n      clerkjs.mountSignIn(node, props);\n    });\n\n    this.premountSignUpNodes.forEach((props, node) => {\n      clerkjs.mountSignUp(node, props);\n    });\n\n    this.premountUserProfileNodes.forEach((props, node) => {\n      clerkjs.mountUserProfile(node, props);\n    });\n\n    this.premountUserButtonNodes.forEach((props, node) => {\n      clerkjs.mountUserButton(node, props);\n    });\n\n    this.premountOrganizationListNodes.forEach((props, node) => {\n      clerkjs.mountOrganizationList(node, props);\n    });\n\n    this.premountWaitlistNodes.forEach((props, node) => {\n      clerkjs.mountWaitlist(node, props);\n    });\n\n    this.premountPricingTableNodes.forEach((props, node) => {\n      clerkjs.mountPricingTable(node, props);\n    });\n\n    this.premountApiKeysNodes.forEach((props, node) => {\n      clerkjs.mountApiKeys(node, props);\n    });\n\n    this.premountOAuthConsentNodes.forEach((props, node) => {\n      clerkjs.__internal_mountOAuthConsent(node, props);\n    });\n\n    this.premountTaskChooseOrganizationNodes.forEach((props, node) => {\n      clerkjs.mountTaskChooseOrganization(node, props);\n    });\n\n    /**\n     * Only update status in case `clerk.status` is missing. In any other case, `clerk-js` should be the orchestrator.\n     */\n    if (typeof this.clerkjs.status === 'undefined') {\n      this.#eventBus.emit(clerkEvents.Status, 'ready');\n    }\n\n    this.emitLoaded();\n    return this.clerkjs;\n  };\n\n  get version() {\n    return this.clerkjs?.version;\n  }\n\n  get client(): ClientResource | undefined {\n    if (this.clerkjs) {\n      return this.clerkjs.client;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  get session() {\n    if (this.clerkjs) {\n      return this.clerkjs.session;\n    } else {\n      return undefined;\n    }\n  }\n\n  get user() {\n    if (this.clerkjs) {\n      return this.clerkjs.user;\n    } else {\n      return undefined;\n    }\n  }\n\n  get organization() {\n    if (this.clerkjs) {\n      return this.clerkjs.organization;\n    } else {\n      return undefined;\n    }\n  }\n\n  get telemetry() {\n    if (this.clerkjs) {\n      return this.clerkjs.telemetry;\n    } else {\n      return undefined;\n    }\n  }\n\n  get __unstable__environment(): any {\n    if (this.clerkjs) {\n      return (this.clerkjs as any).__unstable__environment;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  get isSignedIn(): boolean {\n    if (this.clerkjs) {\n      return this.clerkjs.isSignedIn;\n    } else {\n      return false;\n    }\n  }\n\n  get billing(): CommerceBillingNamespace | undefined {\n    return this.clerkjs?.billing;\n  }\n\n  get __internal_state(): State {\n    return this.loaded && this.clerkjs ? this.clerkjs.__internal_state : this.#stateProxy;\n  }\n\n  get apiKeys(): APIKeysNamespace | undefined {\n    return this.clerkjs?.apiKeys;\n  }\n\n  __experimental_checkout = (...args: Parameters<Clerk['__experimental_checkout']>) => {\n    return this.clerkjs?.__experimental_checkout(...args);\n  };\n\n  __unstable__setEnvironment(...args: any): void {\n    if (this.clerkjs && '__unstable__setEnvironment' in this.clerkjs) {\n      (this.clerkjs as any).__unstable__setEnvironment(args);\n    } else {\n      return undefined;\n    }\n  }\n\n  __unstable__updateProps = async (props: any): Promise<void> => {\n    const clerkjs = await this.#waitForClerkJS();\n    // Handle case where accounts has clerk-react@4 installed, but clerk-js@3 is manually loaded\n    if (clerkjs && '__unstable__updateProps' in clerkjs) {\n      return (clerkjs as any).__unstable__updateProps(props);\n    }\n  };\n\n  /**\n   * `setActive` can be used to set the active session and/or organization.\n   */\n  setActive = (params: SetActiveParams): Promise<void> => {\n    if (this.clerkjs) {\n      return this.clerkjs.setActive(params);\n    } else {\n      return Promise.reject();\n    }\n  };\n\n  openSignIn = (props?: SignInProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openSignIn(props);\n    } else {\n      this.preopenSignIn = props;\n    }\n  };\n\n  closeSignIn = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeSignIn();\n    } else {\n      this.preopenSignIn = null;\n    }\n  };\n\n  __internal_openCheckout = (props?: __internal_CheckoutProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_openCheckout(props);\n    } else {\n      this.preopenCheckout = props;\n    }\n  };\n\n  __internal_closeCheckout = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_closeCheckout();\n    } else {\n      this.preopenCheckout = null;\n    }\n  };\n\n  __internal_openPlanDetails = (props: __internal_PlanDetailsProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_openPlanDetails(props);\n    } else {\n      this.preopenPlanDetails = props;\n    }\n  };\n\n  __internal_closePlanDetails = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_closePlanDetails();\n    } else {\n      this.preopenPlanDetails = null;\n    }\n  };\n\n  __internal_openSubscriptionDetails = (props?: __internal_SubscriptionDetailsProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_openSubscriptionDetails(props);\n    } else {\n      this.preopenSubscriptionDetails = props ?? null;\n    }\n  };\n\n  __internal_closeSubscriptionDetails = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_closeSubscriptionDetails();\n    } else {\n      this.preopenSubscriptionDetails = null;\n    }\n  };\n\n  __internal_openReverification = (props?: __internal_UserVerificationModalProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_openReverification(props);\n    } else {\n      this.preopenUserVerification = props;\n    }\n  };\n\n  __internal_closeReverification = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_closeReverification();\n    } else {\n      this.preopenUserVerification = null;\n    }\n  };\n\n  openGoogleOneTap = (props?: GoogleOneTapProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openGoogleOneTap(props);\n    } else {\n      this.preopenOneTap = props;\n    }\n  };\n\n  closeGoogleOneTap = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeGoogleOneTap();\n    } else {\n      this.preopenOneTap = null;\n    }\n  };\n\n  openUserProfile = (props?: UserProfileProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openUserProfile(props);\n    } else {\n      this.preopenUserProfile = props;\n    }\n  };\n\n  closeUserProfile = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeUserProfile();\n    } else {\n      this.preopenUserProfile = null;\n    }\n  };\n\n  openOrganizationProfile = (props?: OrganizationProfileProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openOrganizationProfile(props);\n    } else {\n      this.preopenOrganizationProfile = props;\n    }\n  };\n\n  closeOrganizationProfile = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeOrganizationProfile();\n    } else {\n      this.preopenOrganizationProfile = null;\n    }\n  };\n\n  openCreateOrganization = (props?: CreateOrganizationProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openCreateOrganization(props);\n    } else {\n      this.preopenCreateOrganization = props;\n    }\n  };\n\n  closeCreateOrganization = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeCreateOrganization();\n    } else {\n      this.preopenCreateOrganization = null;\n    }\n  };\n\n  openWaitlist = (props?: WaitlistProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openWaitlist(props);\n    } else {\n      this.preOpenWaitlist = props;\n    }\n  };\n\n  closeWaitlist = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeWaitlist();\n    } else {\n      this.preOpenWaitlist = null;\n    }\n  };\n\n  openSignUp = (props?: SignUpProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openSignUp(props);\n    } else {\n      this.preopenSignUp = props;\n    }\n  };\n\n  closeSignUp = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeSignUp();\n    } else {\n      this.preopenSignUp = null;\n    }\n  };\n\n  mountSignIn = (node: HTMLDivElement, props?: SignInProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountSignIn(node, props);\n    } else {\n      this.premountSignInNodes.set(node, props);\n    }\n  };\n\n  unmountSignIn = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountSignIn(node);\n    } else {\n      this.premountSignInNodes.delete(node);\n    }\n  };\n\n  mountSignUp = (node: HTMLDivElement, props?: SignUpProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountSignUp(node, props);\n    } else {\n      this.premountSignUpNodes.set(node, props);\n    }\n  };\n\n  unmountSignUp = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountSignUp(node);\n    } else {\n      this.premountSignUpNodes.delete(node);\n    }\n  };\n\n  mountUserProfile = (node: HTMLDivElement, props?: UserProfileProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountUserProfile(node, props);\n    } else {\n      this.premountUserProfileNodes.set(node, props);\n    }\n  };\n\n  unmountUserProfile = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountUserProfile(node);\n    } else {\n      this.premountUserProfileNodes.delete(node);\n    }\n  };\n\n  mountOrganizationProfile = (node: HTMLDivElement, props?: OrganizationProfileProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountOrganizationProfile(node, props);\n    } else {\n      this.premountOrganizationProfileNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationProfile = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountOrganizationProfile(node);\n    } else {\n      this.premountOrganizationProfileNodes.delete(node);\n    }\n  };\n\n  mountCreateOrganization = (node: HTMLDivElement, props?: CreateOrganizationProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountCreateOrganization(node, props);\n    } else {\n      this.premountCreateOrganizationNodes.set(node, props);\n    }\n  };\n\n  unmountCreateOrganization = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountCreateOrganization(node);\n    } else {\n      this.premountCreateOrganizationNodes.delete(node);\n    }\n  };\n\n  mountOrganizationSwitcher = (node: HTMLDivElement, props?: OrganizationSwitcherProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountOrganizationSwitcher(node, props);\n    } else {\n      this.premountOrganizationSwitcherNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationSwitcher = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountOrganizationSwitcher(node);\n    } else {\n      this.premountOrganizationSwitcherNodes.delete(node);\n    }\n  };\n\n  __experimental_prefetchOrganizationSwitcher = () => {\n    const callback = () => this.clerkjs?.__experimental_prefetchOrganizationSwitcher();\n    if (this.clerkjs && this.loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('__experimental_prefetchOrganizationSwitcher', callback);\n    }\n  };\n\n  mountOrganizationList = (node: HTMLDivElement, props?: OrganizationListProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountOrganizationList(node, props);\n    } else {\n      this.premountOrganizationListNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationList = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountOrganizationList(node);\n    } else {\n      this.premountOrganizationListNodes.delete(node);\n    }\n  };\n\n  mountUserButton = (node: HTMLDivElement, userButtonProps?: UserButtonProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountUserButton(node, userButtonProps);\n    } else {\n      this.premountUserButtonNodes.set(node, userButtonProps);\n    }\n  };\n\n  unmountUserButton = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountUserButton(node);\n    } else {\n      this.premountUserButtonNodes.delete(node);\n    }\n  };\n\n  mountWaitlist = (node: HTMLDivElement, props?: WaitlistProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountWaitlist(node, props);\n    } else {\n      this.premountWaitlistNodes.set(node, props);\n    }\n  };\n\n  unmountWaitlist = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountWaitlist(node);\n    } else {\n      this.premountWaitlistNodes.delete(node);\n    }\n  };\n\n  mountPricingTable = (node: HTMLDivElement, props?: PricingTableProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountPricingTable(node, props);\n    } else {\n      this.premountPricingTableNodes.set(node, props);\n    }\n  };\n\n  unmountPricingTable = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountPricingTable(node);\n    } else {\n      this.premountPricingTableNodes.delete(node);\n    }\n  };\n\n  mountApiKeys = (node: HTMLDivElement, props?: APIKeysProps): void => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountApiKeys(node, props);\n    } else {\n      this.premountApiKeysNodes.set(node, props);\n    }\n  };\n\n  unmountApiKeys = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountApiKeys(node);\n    } else {\n      this.premountApiKeysNodes.delete(node);\n    }\n  };\n\n  __internal_mountOAuthConsent = (node: HTMLDivElement, props?: __internal_OAuthConsentProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_mountOAuthConsent(node, props);\n    } else {\n      this.premountOAuthConsentNodes.set(node, props);\n    }\n  };\n\n  __internal_unmountOAuthConsent = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_unmountOAuthConsent(node);\n    } else {\n      this.premountOAuthConsentNodes.delete(node);\n    }\n  };\n\n  mountTaskChooseOrganization = (node: HTMLDivElement, props?: TaskChooseOrganizationProps): void => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountTaskChooseOrganization(node, props);\n    } else {\n      this.premountTaskChooseOrganizationNodes.set(node, props);\n    }\n  };\n\n  unmountTaskChooseOrganization = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountTaskChooseOrganization(node);\n    } else {\n      this.premountTaskChooseOrganizationNodes.delete(node);\n    }\n  };\n\n  addListener = (listener: ListenerCallback): UnsubscribeCallback => {\n    if (this.clerkjs) {\n      return this.clerkjs.addListener(listener);\n    } else {\n      const unsubscribe = () => {\n        const listenerHandlers = this.premountAddListenerCalls.get(listener);\n        if (listenerHandlers) {\n          listenerHandlers.nativeUnsubscribe?.();\n          this.premountAddListenerCalls.delete(listener);\n        }\n      };\n      this.premountAddListenerCalls.set(listener, { unsubscribe, nativeUnsubscribe: undefined });\n      return unsubscribe;\n    }\n  };\n\n  navigate = (to: string) => {\n    const callback = () => this.clerkjs?.navigate(to);\n    if (this.clerkjs && this.loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('navigate', callback);\n    }\n  };\n\n  redirectWithAuth = async (...args: Parameters<Clerk['redirectWithAuth']>) => {\n    const callback = () => this.clerkjs?.redirectWithAuth(...args);\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectWithAuth', callback);\n      return;\n    }\n  };\n\n  redirectToSignIn = async (opts?: SignInRedirectOptions) => {\n    const callback = () => this.clerkjs?.redirectToSignIn(opts as any);\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToSignIn', callback);\n      return;\n    }\n  };\n\n  redirectToSignUp = async (opts?: SignUpRedirectOptions) => {\n    const callback = () => this.clerkjs?.redirectToSignUp(opts as any);\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToSignUp', callback);\n      return;\n    }\n  };\n\n  redirectToUserProfile = async () => {\n    const callback = () => this.clerkjs?.redirectToUserProfile();\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToUserProfile', callback);\n      return;\n    }\n  };\n\n  redirectToAfterSignUp = (): void => {\n    const callback = () => this.clerkjs?.redirectToAfterSignUp();\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToAfterSignUp', callback);\n    }\n  };\n\n  redirectToAfterSignIn = () => {\n    const callback = () => this.clerkjs?.redirectToAfterSignIn();\n    if (this.clerkjs && this.loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToAfterSignIn', callback);\n    }\n  };\n\n  redirectToAfterSignOut = () => {\n    const callback = () => this.clerkjs?.redirectToAfterSignOut();\n    if (this.clerkjs && this.loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToAfterSignOut', callback);\n    }\n  };\n\n  redirectToOrganizationProfile = async () => {\n    const callback = () => this.clerkjs?.redirectToOrganizationProfile();\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToOrganizationProfile', callback);\n      return;\n    }\n  };\n\n  redirectToCreateOrganization = async () => {\n    const callback = () => this.clerkjs?.redirectToCreateOrganization();\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToCreateOrganization', callback);\n      return;\n    }\n  };\n\n  redirectToWaitlist = async () => {\n    const callback = () => this.clerkjs?.redirectToWaitlist();\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToWaitlist', callback);\n      return;\n    }\n  };\n\n  redirectToTasks = async (opts?: TasksRedirectOptions) => {\n    const callback = () => this.clerkjs?.redirectToTasks(opts);\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToTasks', callback);\n      return;\n    }\n  };\n\n  handleRedirectCallback = async (params: HandleOAuthCallbackParams): Promise<void> => {\n    const callback = () => this.clerkjs?.handleRedirectCallback(params);\n    if (this.clerkjs && this.loaded) {\n      void callback()?.catch(() => {\n        // This error is caused when the host app is using React18\n        // and strictMode is enabled. This useEffects runs twice because\n        // the clerk-react ui components mounts, unmounts and mounts again\n        // so the clerk-js component loses its state because of the custom\n        // unmount callback we're using.\n        // This needs to be solved by tweaking the logic in uiComponents.tsx\n        // or by making handleRedirectCallback idempotent\n      });\n    } else {\n      this.premountMethodCalls.set('handleRedirectCallback', callback);\n    }\n  };\n\n  handleGoogleOneTapCallback = async (\n    signInOrUp: SignInResource | SignUpResource,\n    params: HandleOAuthCallbackParams,\n  ): Promise<void> => {\n    const callback = () => this.clerkjs?.handleGoogleOneTapCallback(signInOrUp, params);\n    if (this.clerkjs && this.loaded) {\n      void callback()?.catch(() => {\n        // This error is caused when the host app is using React18\n        // and strictMode is enabled. This useEffects runs twice because\n        // the clerk-react ui components mounts, unmounts and mounts again\n        // so the clerk-js component loses its state because of the custom\n        // unmount callback we're using.\n        // This needs to be solved by tweaking the logic in uiComponents.tsx\n        // or by making handleRedirectCallback idempotent\n      });\n    } else {\n      this.premountMethodCalls.set('handleGoogleOneTapCallback', callback);\n    }\n  };\n\n  handleEmailLinkVerification = async (params: HandleEmailLinkVerificationParams) => {\n    const callback = () => this.clerkjs?.handleEmailLinkVerification(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('handleEmailLinkVerification', callback);\n    }\n  };\n\n  authenticateWithMetamask = async (params?: AuthenticateWithMetamaskParams) => {\n    const callback = () => this.clerkjs?.authenticateWithMetamask(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithMetamask', callback);\n    }\n  };\n\n  authenticateWithCoinbaseWallet = async (params?: AuthenticateWithCoinbaseWalletParams) => {\n    const callback = () => this.clerkjs?.authenticateWithCoinbaseWallet(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithCoinbaseWallet', callback);\n    }\n  };\n\n  authenticateWithBase = async (params?: AuthenticateWithBaseParams) => {\n    const callback = () => this.clerkjs?.authenticateWithBase(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithBase', callback);\n    }\n  };\n\n  authenticateWithOKXWallet = async (params?: AuthenticateWithOKXWalletParams) => {\n    const callback = () => this.clerkjs?.authenticateWithOKXWallet(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithOKXWallet', callback);\n    }\n  };\n\n  authenticateWithWeb3 = async (params: ClerkAuthenticateWithWeb3Params) => {\n    const callback = () => this.clerkjs?.authenticateWithWeb3(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithWeb3', callback);\n    }\n  };\n\n  authenticateWithGoogleOneTap = async (params: AuthenticateWithGoogleOneTapParams) => {\n    const clerkjs = await this.#waitForClerkJS();\n    return clerkjs.authenticateWithGoogleOneTap(params);\n  };\n\n  __internal_loadStripeJs = async () => {\n    const clerkjs = await this.#waitForClerkJS();\n    return clerkjs.__internal_loadStripeJs();\n  };\n\n  createOrganization = async (params: CreateOrganizationParams): Promise<OrganizationResource | void> => {\n    const callback = () => this.clerkjs?.createOrganization(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<OrganizationResource>;\n    } else {\n      this.premountMethodCalls.set('createOrganization', callback);\n    }\n  };\n\n  getOrganization = async (organizationId: string): Promise<OrganizationResource | void> => {\n    const callback = () => this.clerkjs?.getOrganization(organizationId);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<OrganizationResource>;\n    } else {\n      this.premountMethodCalls.set('getOrganization', callback);\n    }\n  };\n\n  joinWaitlist = async (params: JoinWaitlistParams): Promise<WaitlistResource | void> => {\n    const callback = () => this.clerkjs?.joinWaitlist(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<WaitlistResource>;\n    } else {\n      this.premountMethodCalls.set('joinWaitlist', callback);\n    }\n  };\n\n  signOut = async (...args: Parameters<Clerk['signOut']>) => {\n    const callback = () => this.clerkjs?.signOut(...args);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('signOut', callback);\n    }\n  };\n}\n","import { inBrowser } from '@clerk/shared/browser';\nimport type { Errors, State } from '@clerk/types';\n\nimport { errorThrower } from './errors/errorThrower';\nimport type { IsomorphicClerk } from './isomorphicClerk';\n\nconst defaultErrors = (): Errors => ({\n  fields: {\n    firstName: null,\n    lastName: null,\n    emailAddress: null,\n    identifier: null,\n    phoneNumber: null,\n    password: null,\n    username: null,\n    code: null,\n    captcha: null,\n    legalAccepted: null,\n  },\n  raw: null,\n  global: null,\n});\n\nexport class StateProxy implements State {\n  constructor(private isomorphicClerk: IsomorphicClerk) {}\n\n  private readonly signInSignalProxy = this.buildSignInProxy();\n  private readonly signUpSignalProxy = this.buildSignUpProxy();\n\n  signInSignal() {\n    return this.signInSignalProxy;\n  }\n  signUpSignal() {\n    return this.signUpSignalProxy;\n  }\n\n  private buildSignInProxy() {\n    const target = () => this.client.signIn.__internal_future;\n\n    return {\n      errors: defaultErrors(),\n      fetchStatus: 'idle' as const,\n      signIn: {\n        status: 'needs_identifier' as const,\n        availableStrategies: [],\n        isTransferable: false,\n\n        create: this.gateMethod(target, 'create'),\n        password: this.gateMethod(target, 'password'),\n        sso: this.gateMethod(target, 'sso'),\n        finalize: this.gateMethod(target, 'finalize'),\n\n        emailCode: this.wrapMethods(() => target().emailCode, ['sendCode', 'verifyCode'] as const),\n        resetPasswordEmailCode: this.wrapMethods(() => target().resetPasswordEmailCode, [\n          'sendCode',\n          'verifyCode',\n          'submitPassword',\n        ] as const),\n        phoneCode: this.wrapMethods(() => target().phoneCode, ['sendCode', 'verifyCode'] as const),\n        mfa: this.wrapMethods(() => target().mfa, [\n          'sendPhoneCode',\n          'verifyPhoneCode',\n          'verifyTOTP',\n          'verifyBackupCode',\n        ] as const),\n      },\n    };\n  }\n\n  private buildSignUpProxy() {\n    const gateProperty = this.gateProperty.bind(this);\n    const gateMethod = this.gateMethod.bind(this);\n    const wrapMethods = this.wrapMethods.bind(this);\n    const target = () => this.client.signUp.__internal_future;\n\n    return {\n      errors: defaultErrors(),\n      fetchStatus: 'idle' as const,\n      signUp: {\n        get status() {\n          return gateProperty(target, 'status', 'missing_requirements');\n        },\n        get unverifiedFields() {\n          return gateProperty(target, 'unverifiedFields', []);\n        },\n        get isTransferable() {\n          return gateProperty(target, 'isTransferable', false);\n        },\n\n        create: gateMethod(target, 'create'),\n        update: gateMethod(target, 'update'),\n        sso: gateMethod(target, 'sso'),\n        password: gateMethod(target, 'password'),\n        finalize: gateMethod(target, 'finalize'),\n\n        verifications: wrapMethods(() => target().verifications, [\n          'sendEmailCode',\n          'verifyEmailCode',\n          'sendPhoneCode',\n          'verifyPhoneCode',\n        ] as const),\n      },\n    };\n  }\n\n  __internal_effect(_: () => void): () => void {\n    throw new Error('__internal_effect called before Clerk is loaded');\n  }\n  __internal_computed<T>(_: (prev?: T) => T): () => T {\n    throw new Error('__internal_computed called before Clerk is loaded');\n  }\n\n  private get client() {\n    const c = this.isomorphicClerk.client;\n    if (!c) {\n      throw new Error('Clerk client not ready');\n    }\n    return c;\n  }\n\n  private gateProperty<T extends object, K extends keyof T>(getTarget: () => T, key: K, defaultValue: T[K]) {\n    return (() => {\n      if (!inBrowser() || !this.isomorphicClerk.loaded) {\n        return defaultValue;\n      }\n      const t = getTarget();\n      return t[key];\n    })();\n  }\n\n  private gateMethod<T extends object, K extends keyof T & string>(getTarget: () => T, key: K) {\n    type F = Extract<T[K], (...args: unknown[]) => unknown>;\n    return (async (...args: Parameters<F>): Promise<ReturnType<F>> => {\n      if (!inBrowser()) {\n        return errorThrower.throw(`Attempted to call a method (${key}) that is not supported on the server.`);\n      }\n      if (!this.isomorphicClerk.loaded) {\n        await new Promise<void>(resolve => this.isomorphicClerk.addOnLoaded(resolve));\n      }\n      const t = getTarget();\n      return (t[key] as (...args: Parameters<F>) => ReturnType<F>).apply(t, args);\n    }) as F;\n  }\n\n  private wrapMethods<T extends object, K extends readonly (keyof T & string)[]>(\n    getTarget: () => T,\n    keys: K,\n  ): Pick<T, K[number]> {\n    return Object.fromEntries(keys.map(k => [k, this.gateMethod(getTarget, k)])) as Pick<T, K[number]>;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}