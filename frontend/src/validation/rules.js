// Auto-generated validation rules (CMS-1500 + UB-04)
const rules = [
  {
    "id": "cms_missing_dob",
    "description": "Missing Patient Date of Birth",
    "fields": ["dob"],
    "type": "missing",
    "message": "Missing patient date of birth",
    "suggestion": "Enter DOB (MM/DD/YYYY)",
  },
  {
    "id": "cms_invalid_dob_format",
    "description": "Invalid DOB format",
    "fields": ["dob"],
    "type": "format",
    "message": "Invalid DOB format",
    "suggestion": "Expected MM/DD/YYYY",
    regex: new RegExp("^(0[1-9]|1[0-2])/(0[1-9]|[12][0-9]|3[01])/[0-9]{4}$"),
  },
  {
    "id": "cms_missing_gender",
    "description": "Missing Patient Gender",
    "fields": ["gender"],
    "type": "missing",
    "message": "Missing patient gender",
    "suggestion": "Enter gender code M/F/U",
  },
  {
    "id": "cms_missing_insurance_name",
    "description": "Missing Insurance Name",
    "fields": ["insuranceName", "insurance_name"],
    "type": "missing",
    "message": "Missing insurance name",
    "suggestion": "Enter insurer name",
  },
  {
    "id": "cms_missing_policy_number",
    "description": "Missing Subscriber Policy Number",
    "fields": ["policyNumber", "insurance_id", "ins_policy"],
    "type": "missing",
    "message": "Missing policy number",
    "suggestion": "Enter policy number",
  },
  {
    "id": "cms_missing_relationship",
    "description": "Missing Patient Relationship to Insured",
    "fields": ["relationship", "rel_to_ins"],
    "type": "missing",
    "message": "Patient relationship to insured missing",
    "suggestion": "Select relationship (self/spouse/child)",
  },
  {
    "id": "cms_missing_provider_npi",
    "description": "Missing Provider NPI",
    "fields": ["npi", "providerNPI", "33a_npi"],
    "type": "missing",
    "message": "Missing provider NPI",
    "suggestion": "Enter provider NPI (10 digits)",
  },
  {
    "id": "cms_missing_referring",
    "description": "Missing Referring Provider",
    "fields": ["referringProvider", "ref_physician", "17"],
    "type": "missing",
    "message": "Missing referring provider",
    "suggestion": "Enter referring provider details if required",
  },
  {
    "id": "cms_missing_service_facility",
    "description": "Missing Service Facility Location",
    "fields": ["serviceFacility", "fac_location", "32"],
    "type": "missing",
    "message": "Missing service facility location",
    "suggestion": "Enter facility location",
  },
  {
    "id": "cms_missing_diagnosis",
    "description": "Missing Diagnosis Code",
    "fields": ["diagnosis", "diag1", "diag2", "icd"],
    "type": "missing",
    "message": "Diagnosis code missing",
    "suggestion": "Enter diagnosis code in Box 21",
  },
  {
    "id": "cms_missing_procedure",
    "description": "Missing Procedure Code",
    "fields": ["procedure", "cpt", "cpt1"],
    "type": "missing",
    "message": "Procedure code missing",
    "suggestion": "Enter CPT/HCPCS in Box 24D",
  },
  {
    "id": "cms_invalid_date_of_service",
    "description": "Invalid Date of Service format",
    "fields": ["serviceDate", "sv1_mm_from", "sv1_dd_from", "sv1_yy_from"],
    "type": "format",
    "message": "Invalid date of service",
    "suggestion": "Expected MM/DD/YYYY",
    regex: new RegExp("^(0[1-9]|1[0-2])/(0[1-9]|[12][0-9]|3[01])/[0-9]{4}$"),
  },
  {
    "id": "cms_invalid_pos",
    "description": "Invalid Place of Service code",
    "fields": ["placeOfService", "place1", "24B"],
    "type": "format",
    "message": "Invalid POS code",
    "suggestion": "Verify POS code is valid (01-99)",
    regex: new RegExp("^[0-9]{2}$"),
  },
  {
    "id": "cms_invalid_modifier",
    "description": "Invalid Modifier for CPT",
    "fields": ["modifier", "mod1", "mod2"],
    "type": "format",
    "message": "Modifier may be incorrect",
    "suggestion": "Check CPT modifier rules",
    regex: new RegExp("^[0-9A-Z]{1,2}$"),
  },
  {
    "id": "cms_units_mismatch",
    "description": "Units of service mismatch",
    "fields": ["units", "day1", "24G"],
    "type": "format",
    "message": "Units mismatch or missing",
    "suggestion": "Verify units match procedure guidelines",
  },
  {
    "id": "cms_charged_amount_blank",
    "description": "Charged Amount Blank",
    "fields": ["charge", "ch1", "24F"],
    "type": "missing",
    "message": "Charged amount is blank",
    "suggestion": "Enter charge amount",
  },
  {
    "id": "cms_npi_mismatch",
    "description": "Rendering vs Billing NPI mismatch",
    "fields": ["renderingNPI", "billingNPI", "24J", "33a"],
    "type": "cross",
    "message": "Rendering provider NPI differs from billing NPI",
    "suggestion": "Ensure correct NPI entered",
  },
  {
    "id": "cms_taxonomy_missing",
    "description": "Missing Taxonomy code",
    "fields": ["taxonomy", "33b"],
    "type": "missing",
    "message": "Taxonomy code missing",
    "suggestion": "Add taxonomy code",
  },
  {
    "id": "cms_icd_flag_incorrect",
    "description": "ICD version flag incorrect",
    "fields": ["icd_version", "icd_flag"],
    "type": "format",
    "message": "ICD version flag incorrect",
    "suggestion": "Set ICD-10 when using ICD-10 codes",
  },
  {
    "id": "cms_cpt_icd_mismatch",
    "description": "CPT and Diagnosis mismatch",
    "fields": ["cpt", "icd"],
    "type": "cross",
    "message": "CPT and diagnosis mismatch",
    "suggestion": "Verify CPT justifies diagnosis",
  },
  {
    "id": "cms_age_gender_conflict",
    "description": "Age/Gender and Service Conflict",
    "fields": ["dob", "gender", "cpt"],
    "type": "cross",
    "message": "Age or gender inappropriate for billed service",
    "suggestion": "Check service appropriateness for patient age/gender",
  },
  {
    "id": "cms_unlisted_code_no_doc",
    "description": "Unlisted code without documentation",
    "fields": ["cpt", "unlisted"],
    "type": "admin",
    "message": "Unlisted CPT without documentation",
    "suggestion": "Provide justification/documentation",
  },
  {
    "id": "cms_duplicate_service",
    "description": "Duplicate service line",
    "fields": ["serviceDate", "cpt", "units"],
    "type": "cross",
    "message": "Potential duplicate service",
    "suggestion": "Check for duplicate billing",
  },
  {
    "id": "cms_timely_filing",
    "description": "Timely filing exceeded",
    "fields": "serviceDate",
    "type": "admin",
    "message": "Timely filing limit exceeded",
    "suggestion": "Verify timely filing rules",
  },
  {
    "id": "cms_terminated_npi",
    "description": "Claim billed under terminated provider NPI",
    "fields": ["npi", "providerNPI"],
    "type": "admin",
    "message": "Provider NPI terminated",
    "suggestion": "Use active provider NPI",
  },
  {
    "id": "cms_address_mismatch",
    "description": "Provider address mismatch",
    "fields": ["providerAddress", "doc_street", "doc_location"],
    "type": "admin",
    "message": "Provider address mismatch",
    "suggestion": "Confirm provider address",
  },
  {
    "id": "cms_missing_signature",
    "description": "Missing Provider Signature",
    "fields": ["signature", "physician_signature", "31"],
    "type": "missing",
    "message": "Missing signature",
    "suggestion": "Obtain provider signature",
  },
  {
    "id": "cms_accept_assignment_unchecked",
    "description": "Accept Assignment unchecked",
    "fields": ["assignment", "acceptAssignment", "27"],
    "type": "admin",
    "message": "Accept assignment not checked",
    "suggestion": "Check box if accepting assignment",
  },
  {
    "id": "cms_coord_of_benefits",
    "description": "Coordination of Benefits ignored",
    "fields": ["cob", "otherInsurance", "other_ins_name"],
    "type": "cross",
    "message": "Coordination of benefits missing",
    "suggestion": "Verify other payers and primary/secondary",
  },
  {
    "id": "cms_workers_comp_as_standard",
    "description": "Workers' Comp billed as standard",
    "fields": ["workersComp", "10A", "10B", "10C"],
    "type": "cross",
    "message": "Workers' Comp billed incorrectly",
    "suggestion": "Use correct workers' comp fields",
  },
  {
    "id": "cms_overuse_units",
    "description": "Overuse of units",
    "fields": ["units", "day1"],
    "type": "cross",
    "message": "Units exceed allowed frequency",
    "suggestion": "Verify allowed units per CPT",
  },
  {
    "id": "cms_multiple_insurance_misentry",
    "description": "Multiple insurance misentries",
    "fields": ["insurance1", "insurance2", "other_ins_name"],
    "type": "admin",
    "message": "Multiple insurances entered incorrectly",
    "suggestion": "Enter secondary/tertiary properly",
  },
  {
    "id": "cms_diagnosis_truncated",
    "description": "Diagnosis code truncated",
    "fields": ["icd", "diag1"],
    "type": "format",
    "message": "Diagnosis code truncated",
    "suggestion": "Ensure full ICD code including characters",
  },
  {
    "id": "cms_medicaid_no_proof",
    "description": "Medicaid billed without proof",
    "fields": ["payer", "medicaid"],
    "type": "admin",
    "message": "Medicaid billed without proof",
    "suggestion": "Provide qualifying information",
  },
  {
    "id": "ub_missing_patient_control",
    "description": "Missing Patient Control Number",
    "fields": ["patientControl", "FL03"],
    "type": "missing",
    "message": "Patient control number missing",
    "suggestion": "Enter patient control number",
  },
  {
    "id": "ub_missing_statement_dates",
    "description": "Missing Statement Dates",
    "fields": ["statementFrom", "statementTo", "FL06"],
    "type": "missing",
    "message": "Statement from/to dates missing",
    "suggestion": "Enter statement covers from/to",
  },
  {
    "id": "ub_missing_patient_info",
    "description": "Missing patient name or address",
    "fields": ["patientName", "patientAddress", "FL08", "FL09"],
    "type": "missing",
    "message": "Patient name or address missing",
    "suggestion": "Provide patient name and address",
  },
  {
    "id": "ub_missing_admission_info",
    "description": "Missing Admission Type/Source",
    "fields": ["admissionType", "admissionSource", "FL14", "FL15"],
    "type": "missing",
    "message": "Admission type/source missing",
    "suggestion": "Enter admission type/source",
  },
  {
    "id": "ub_missing_discharge_status",
    "description": "Missing Discharge Status",
    "fields": ["dischargeStatus", "FL17"],
    "type": "missing",
    "message": "Discharge status missing",
    "suggestion": "Enter discharge status",
  },
  {
    "id": "ub_missing_principal_diagnosis",
    "description": "Missing Principal Diagnosis",
    "fields": ["principalDiagnosis", "FL67"],
    "type": "missing",
    "message": "Principal diagnosis missing",
    "suggestion": "Enter principal diagnosis code",
  },
  {
    "id": "ub_missing_attending_npi",
    "description": "Missing Attending Physician NPI",
    "fields": ["attendingNPI", "FL76"],
    "type": "missing",
    "message": "Attending physician NPI missing",
    "suggestion": "Enter attending NPI",
  },
  {
    "id": "ub_revenue_code_no_hcpcs",
    "description": "Revenue code with no HCPCS",
    "fields": ["revenueCode", "hcpcs", "FL42"],
    "type": "cross",
    "message": "Revenue code entered without HCPCS",
    "suggestion": "Add HCPCS or remove revenue code",
  },
  {
    "id": "ub_service_units_missing",
    "description": "Service units missing",
    "fields": ["serviceUnits", "FL46"],
    "type": "missing",
    "message": "Service units missing",
    "suggestion": "Enter units of service",
  },
  {
    "id": "ub_invalid_diagnosis_drg",
    "description": "Diagnosis does not match DRG logic",
    "fields": ["diagnosis", "drg"],
    "type": "cross",
    "message": "Diagnosis doesn't match DRG logic",
    "suggestion": "Verify DRG and diagnosis code mapping",
  },
  {
    "id": "ub_outdated_icd",
    "description": "Outdated ICD version used",
    "fields": ["icd", "icd_flag"],
    "type": "format",
    "message": "Outdated ICD version used",
    "suggestion": "Use ICD-10 codes",
  },
  {
    "id": "ub_zip_format_invalid",
    "description": "Invalid ZIP format",
    "fields": ["patientZip", "providerZip"],
    "type": "format",
    "message": "ZIP code format invalid",
    "suggestion": "Enter 5-digit ZIP or ZIP+4",
  },
  {
    "id": "ub_bill_type_incorrect",
    "description": "Bill Type incorrect",
    "fields": ["billType", "FL04"],
    "type": "format",
    "message": "Incorrect bill type",
    "suggestion": "Verify bill type code",
  },
  {
    "id": "ub_duplicate_dates",
    "description": "Duplicate admission & discharge dates",
    "fields": ["admissionDate", "dischargeDate"],
    "type": "cross",
    "message": "Duplicate admission and discharge dates",
    "suggestion": "Confirm inpatient dates",
  },
  {
    "id": "ub_room_board_on_outpatient",
    "description": "Room & board code on outpatient",
    "fields": ["revenueCode", "roomBoard"],
    "type": "cross",
    "message": "Room & board billed for outpatient",
    "suggestion": "Correct revenue code usage",
  },
  {
    "id": "ub_days_exceed_los",
    "description": "Days billed exceed LOS",
    "fields": "lengthOfStay",
    "type": "cross",
    "message": "Days billed exceed medically necessary LOS",
    "suggestion": "Verify LOS and clinical justification",
  },
  {
    "id": "ub_preauth_missing",
    "description": "Pre-authorization required but missing",
    "fields": ["authNumber", "preauth"],
    "type": "admin",
    "message": "Authorization missing",
    "suggestion": "Supply pre-authorization number if required",
  },
  {
    "id": "ub_medicaid_missing_info",
    "description": "Medicaid billed without qualifying info",
    "fields": ["payer", "medicaid"],
    "type": "admin",
    "message": "Medicaid billed without qualifying info",
    "suggestion": "Provide necessary documentation",
  },
];

// Example check functions
function units_zero_check(extracted) {
  if (extracted.units === undefined) return null;
  if (String(extracted.units).trim() === '0' || String(extracted.units).trim() === '0.0') {
    return { status: 'warn', message: 'Zero units billed', suggestion: 'Confirm units' };
  }
  return null;
}

// attach check functions if any
for (const r of rules) {
  if (r.checkName === 'units_zero_check') r.check = units_zero_check;
}

export default rules;
